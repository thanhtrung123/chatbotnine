<?php

namespace App\Repositories\ScenarioKeyword;

use App\Models\ScenarioKeyword;
use App\Repositories\AbstractRepository;
use App\Repositories\RepositoryInterface;
use DB;

/**
 * シナリオキーワードリポジトリ
 * Class ScenarioRepository
 * @package App\Repositories\Scenario
 */
class ScenarioKeywordRepository extends AbstractRepository implements ScenarioKeywordRepositoryInterface
{
    private $enable_join = true;

    /**
     * モデルクラス名取得
     * @return mixed|string
     */
    public function getModelClass()
    {
        return ScenarioKeyword::class;
    }

    /**
     * パラメータでフィルタリング実行
     * @return $this|void
     */
    public function filterByParams(): RepositoryInterface
    {
        $query = $this->getQuery();
        if (!empty($this->params['scenario_id'])) {
            $query->where('scenario_id', $this->params['scenario_id']);
        }
        if (!empty($this->params['not_used'])) {
            $query->whereNull('scenario_id');
        }
        if (!empty($this->params['ids'])) {
            $query->whereIn("{$this->model->getTable()}.id", $this->params['ids']);
        }
        if (!empty($this->params['keyword'])) {
            $query->whereRaw('? like CONCAT("%",keyword,"%")', $this->params['keyword'])
                ->orWhereRaw('keyword like ?', '%' . $this->params['keyword'] . '%');
        }
        if (!empty($this->params['keywords'])) {
            $query->whereIn('keyword', $this->params['keywords']);
        }
        return $this;
    }

    /**
     * @param \Illuminate\Database\Query\Builder|mixed $query
     */
    public function beforeDbResult($query)
    {
        if ($this->enable_join) $this->joinRelation($query);
        parent::beforeDbResult($query); // TODO: Change the autogenerated stub
    }

    /**
     * @param \Illuminate\Database\Query\Builder $query
     * @return $this
     */
    private function joinRelation($query)
    {
        $query->select('*', "{$this->model->getTable()}.id as keyword_id")
            ->leftJoin("tbl_scenario_keyword_relation", "{$this->model->getTable()}.id", "=", "tbl_scenario_keyword_relation.scenario_keyword_id")
            ->groupBy("{$this->model->getTable()}.id");
        return $this;
    }

    /**
     * キーワードのID取得
     * @param $word
     * @return mixed|null
     */
    public function findOnly($word)
    {
        $data = $this->findOneBy(['keyword' => $word]);
        return $data['id'] ?? null;
    }

    /**
     * @param $word
     * @return mixed|null
     */
    public function findOrSave($word)
    {
        $id = $this->findOnly($word);
        if ($id === null) {
            $data = $this->create(['keyword' => $word]);
            $id = $data->id;
        }
        return $id;
    }

    /**
     * @param bool $enable_join
     * @return $this
     */
    public function setEnableJoin(bool $enable_join)
    {
        $this->enable_join = $enable_join;
        return $this;
    }

}