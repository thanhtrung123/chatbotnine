/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 7);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/assets/js/drawflow-custom.js":
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(\"./resources/assets/js/drawflow/drawflow-custom.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2RyYXdmbG93LWN1c3RvbS5qcz9mYmNlIl0sIm5hbWVzIjpbInJlcXVpcmUiXSwibWFwcGluZ3MiOiJBQUFBQSxtQkFBT0EsQ0FBQyxtREFBUiIsImZpbGUiOiIuL3Jlc291cmNlcy9hc3NldHMvanMvZHJhd2Zsb3ctY3VzdG9tLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9kcmF3Zmxvdy9kcmF3Zmxvdy1jdXN0b20uanMnKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2RyYXdmbG93LWN1c3RvbS5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/js/drawflow-custom.js\n");

/***/ }),

/***/ "./resources/assets/js/drawflow/drawflow-custom.js":
/***/ (function(module, exports) {

eval("/**\r\n * Replace special characters\r\n * @param {string} s\r\n */\nfunction htmlEnc(s) {\n    return s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&#39;').replace(/\"/g, '&#34;');\n}\n\n// Setting modal\nvar setting_modal = {\n    backdrop: 'static',\n    keyboard: false\n\n    /**\r\n     * Show/hide load and disable/enable area editor\r\n     * @param {boolean} load\r\n     */\n};function setLoad(load) {\n    if (load) {\n        $('.lds-roller').css('display', 'block');\n        $('.drawflow-area').css('opacity', '0.5');\n        $('#drawflow-editor').css('pointer-events', 'none');\n    } else {\n        $('.lds-roller').css('display', 'none');\n        $('.drawflow-area').css('opacity', '1');\n        $('#drawflow-editor').css('pointer-events', 'all');\n    }\n}\n\n/**\r\n * Search data QA learing\r\n */\nfunction searchQa() {\n    if (!$('#qaModal').hasClass('in')) {\n        setLoad(true);\n    }\n    var category_id = Number($('.qaCategory ').val()),\n        apiId = $('.apiId').val(),\n        keyword = $('.qaKeyword').val(),\n        arr_id_qa = new Array();\n    category_id = category_id == 0 ? null : category_id;\n    $.ajax({\n        url: urlQaSearch,\n        method: 'GET',\n        data: {\n            apiId: apiId,\n            keyword: keyword,\n            category_id: category_id,\n            _token: csrf_token\n        }\n    }).done(function (response) {\n        $('#qaModal').modal(setting_modal);\n        $('.drawflow').children().map(function (i, val) {\n            if (val.children && val.children.length > 0 && val.children[0].tagName == 'DIV') {\n                if (val.children[0].getAttribute('id').slice(5, 6) == 'q') {\n                    arr_id_qa.push(Number(val.children[0].getAttribute('id').slice(6)));\n                }\n            }\n        });\n        var html = '<tr><td colspan=\"4\" class=\"text-center\">データが登録されていません。</td></tr>';\n        if (response.datatable_qa.length > 0) {\n            html = response.datatable_qa.map(function (element) {\n                var colorBtn = arr_id_qa.indexOf(element[\"id\"]) != -1 ? 'btn-primary qa-Copy-Node' : 'btn-primary qa-Add-Node';\n                var html = '<tr>';\n                html += '<td class=\"id_qa_add\">';\n                html += element[\"api_id\"];\n                html += '</td>';\n                html += '<td class=\"api_id_qa_td text-center\"></td>';\n                html += '<td>';\n                html += htmlEnc(element[\"question\"]);\n                html += '</td>';\n                html += '<td>';\n                html += htmlEnc(element[\"answer\"]);\n                html += '</td>';\n                html += '<td class=\"text-center\">';\n                html += '<button id=\"q' + element[\"id\"] + '\" type=\"button\" class=\"btn ' + colorBtn + '\" data-text-qa=\"' + htmlEnc(element[\"question\"]) + '\" api_id=\"' + element[\"api_id\"] + '\"> 追加 </button>';\n                html += '</td>';\n                html += '</tr>';\n                return html;\n            });\n        }\n        $('.table-scroll tbody').html(html);\n        csrf_token = response.token;\n    }).fail(function () {\n        $('#scenarioEdit').modal(setting_modal);\n        showMsg('QA登録', '接続できません。');\n        $('.delete-scenario-all').css('display', 'none');\n    }).always(function () {\n        setLoad(false);\n    });\n}\n\nfunction showMsg(modal_header, msg) {\n    $('.modal-title').html(modal_header);\n    $('.message_body').html(msg);\n}\n\nfunction addNodeElement(name, e) {\n    var id = null;\n    var api_id = null;\n    var nameSubmit = $(\"#nameScenario\").val();\n    if (e !== undefined) {\n        nameSubmit = e.getAttribute('data-text-qa');\n        id = e.getAttribute('id');\n        api_id = e.getAttribute('api_id');\n    }\n\n    var pos_x = ($('.parent-drawflow').scrollLeft() + 100 - editor.canvas_x) / editor.zoom;\n    var pos_y = ($('.parent-drawflow').scrollTop() + 100 - editor.canvas_y) / editor.zoom;\n\n    var title = nameSubmit;\n    title = convertLongString(title);\n    //validate\n    var name_scenario = $('form#formScenario').find('input[name=\"name\"]').val().trim(),\n        order = $('form#formScenario').find('input[name=\"order\"]').val(),\n        keyword_select = $('#clone_area').find('select[name^=multi_data]'),\n        type = 'create';\n\n    if (name == 'scenario' && !validateParams(name_scenario, order, keyword_select, type)) {\n        return false;\n    }\n    switch (name) {\n        case 'scenario':\n            var input = $(\"<input>\").attr(\"type\", \"hidden\").attr(\"name\", \"category_id\").val($('.scenarioCategory').val());\n            $('#formScenario').append(input);\n            var form_data = $('form#formScenario').serialize(); //Encode form elements for submission\n            $.ajax({\n                url: urlSenario,\n                type: 'POST',\n                data: {\n                    data: form_data,\n                    _token: csrf_token\n                }\n            }).done(function (response) {\n                temp++;\n                var id = 's' + temp + '-temp';\n                var scenario = '<div><div class=\"title-box1 editor-scenario\" title=\"' + nameSubmit + '\">' + title + '</div></div>';\n                response.id = id;\n                editor.addNode(nameSubmit, 1, 1, pos_x, pos_y, 'editor-scenario', {}, scenario, !1, id, JSON.stringify(response));\n                $(\".keyword-add-scenario\")[0].innerHTML = '';\n                $(\"#nameScenario\").val('');\n                $(\"#order\").val('');\n                editor.showDataToLeft();\n                $('#node-' + id)[0].setAttribute('onclick', 'editor.focusData(this, false, \\'' + id + '\\')');\n                editor.focusData(e, false, id);\n                $('#scenarioAdd').modal('hide');\n            }).fail(function () {\n                $('#scenarioEdit').modal(setting_modal);\n                showMsg('シナリオ追加', 'シナリオ追加できません。');\n                $('.delete-scenario-all').css('display', 'none');\n            }).always(function () {\n                setLoad(false);\n            });\n            break;\n        case 'qa':\n            $.ajax({\n                url: urlQaSearch,\n                method: 'GET',\n                data: {\n                    apiId: api_id,\n                    type: 'add',\n                    _token: csrf_token\n                }\n            }).done(function (response) {\n                var qa = '<div><div class=\"title-box editor-qa-id\" title=\"' + api_id + '\">QA ID: ' + api_id + '</div><div class=\"title-box editor-qa\" title=\"' + nameSubmit + '\">' + title + '</div></div>';\n                editor.addNode(nameSubmit, 1, 0, pos_x, pos_y, 'editor-qa', {}, qa, !1, id, JSON.stringify(response.datatable_qa[0]));\n                $('.qaKeyword').val('');\n                $('.qaId').val('');\n                editor.showDataToLeft();\n                $('#qaModal').modal('hide');\n                editor.focusData(e, false, id);\n            }).fail(function () {\n                $('#scenarioEdit').modal(setting_modal);\n                showMsg('QA登録', 'QA追加できません。');\n                $('.delete-scenario-all').css('display', 'none');\n            });\n            break;\n        default:\n    }\n}\n\nfunction loadScenario(params, id) {\n    $('#drawflow-editor').css('pointer-events', 'none');\n    editor.clear();\n    editor.clearHistory();\n    setLoad(true);\n    $('.scenarioCategory').val(params).trigger('change');\n    $('.qaCategory').val(params).trigger('change');\n    $('.fillterCategory').attr('disabled', true);\n    ShowDataQa([]);\n    ShowDataScenario([]);\n    $.ajax({\n        url: urlScenarioFillter,\n        timeout: 0,\n        method: 'GET',\n        data: {\n            params: params,\n            _token: csrf_token\n        }\n    }).done(function name(response) {\n        $('.fillterCategory').removeAttr('disabled');\n        var cloneData = JSON.parse(JSON.stringify(response));\n        actionHistory = [].concat(cloneData);\n        dataQa = response.answer;\n        dataScenario = response.scenario;\n        dataQaCP = response.answerCopy;\n\n        //Set data on show drawjs\n        result = setDataShowScenario(response);\n\n        //Set location scenario\n        setLocation(result, response.position);\n\n        $('.drawflow-area').css('opacity', '1');\n        if (id) {\n            editor.focusData(this, false, id);\n        }\n        var overflow_w = 0,\n            overflow_h = 0,\n            container = $('#drawflow');\n        container.find('.drawflow-node').each(function () {\n            if ($(this).position().top + $(this).outerHeight() + 50 > container.children('.drawflow').outerHeight()) {\n                overflow_h = container.children('.drawflow').outerHeight();\n            }\n            if ($(this).position().left + $(this).outerWidth() + 50 > container.children('.drawflow').outerWidth()) {\n                overflow_w = container.children('.drawflow').outerWidth();\n            }\n        });\n        if (overflow_h || overflow_w) {\n            container.children('.drawflow').css({\n                width: container.children('.drawflow').outerWidth() + overflow_w,\n                height: container.children('.drawflow').outerHeight() + overflow_h\n            });\n        }\n        editor.zoom_reset();\n\n        //On show\n        editor.load();\n        editor.addHistory();\n    }).fail(function () {\n        alert(\"接続できません。\");\n    }).always(function () {\n        $('.status-scenario').prop('disabled', false);\n        $('#drawflow-editor').css('pointer-events', 'all');\n        $('.lds-roller').css('display', 'none');\n    });\n}\n\nfunction ShowDataQa(data, dataCP) {\n    $('.content-qa').innerHTML = '';\n    var html = new Array(),\n        htmlCP = new Array();\n    html = data.map(function (val, index) {\n        if (val.scenario_id) {\n            return '<p class=\"q' + val.answer_id + '\" onclick=\"editor.focusData(this)\">' + val.question + '</p>';\n        }\n    });\n    if (dataCP) {\n        htmlCP = Object.keys(dataCP).map(function (val, index) {\n            if (dataCP[val].scenario_id) {\n                return '<p class=\"' + val + '\" onclick=\"editor.focusData(this)\">' + dataCP[val].question + '</p>';\n            }\n        });\n    }\n    $('.content-qa').html(html.concat(htmlCP).join(''));\n}\n\nfunction ShowDataScenario(dataScenario) {\n    $('.content-scenario').innerHTML = '';\n    var html = dataScenario.map(function (val, index) {\n        var id = editor.drawflow.drawflow.Home.data[val].data.id;\n        var name = editor.drawflow.drawflow.Home.data[val].data.name;\n        return '<p class=\"s' + id + '\" onclick=\"editor.focusData(this)\">' + name + '</p>';\n    });\n    $('.content-scenario').html(html);\n}\n\nfunction fillterDataScenario(params) {\n    var datas = Object.keys(editor.drawflow.drawflow.Home.data).filter(function (val, i) {\n        if (val.toLowerCase().indexOf('s') >= 0 && editor.drawflow.drawflow.Home.data[val].name.toLowerCase().indexOf(params.toLowerCase()) >= 0) {\n            return editor.drawflow.drawflow.Home.data[val];\n        }\n    });\n    ShowDataScenario(datas);\n}\n\nfunction fillterDataQa(params) {\n    var datas = [];\n    dataQa.map(function (val, index) {\n        datas.push({\n            \"api_id\": val.api_id,\n            \"node_id\": val.node_id,\n            \"question\": val.question,\n            \"scenario_id\": val.scenario_id\n        });\n    });\n    Object.keys(dataQaCP).filter(function (val, i) {\n        datas.push({\n            \"api_id\": dataQaCP[val].api_id,\n            \"node_id\": dataQaCP[val].node_id,\n            \"question\": dataQaCP[val].question,\n            \"scenario_id\": dataQaCP[val].scenario_id\n        });\n    });\n    var datasQA = dataQa.filter(function (val, i) {\n        return val[\"question\"].toLowerCase().indexOf(params.toLowerCase()) >= 0;\n    });\n    var datasCP = Object.keys(dataQaCP).reduce(function (r, e) {\n        if (dataQaCP[e].question.toLowerCase().indexOf(params.toLowerCase()) >= 0) r[e] = dataQaCP[e];\n        return r;\n    }, {});\n    ShowDataQa(datasQA, datasCP);\n}\n\nfunction convertLongString(str) {\n    if (str.length >= 11) {\n        return str = str.substring(0, 11) + '...';\n    }\n    return str;\n}\n\nfunction scenarioEdit() {\n    setLoad(true);\n    $('.edit-scenario-button').css('display', 'inline');\n    var target = $('.drawflow').find('.editor-scenario.selected').attr('id');\n    if (target && target.indexOf('node-s') != -1) {\n        var idScenario = target;\n        var data = $('#' + idScenario)[0].getAttribute('data');\n        $.ajax({\n            url: editScenario,\n            method: 'GET',\n            data: {\n                data: data,\n                _token: csrf_token\n            }\n        }).done(function (response) {\n            $('#scenarioEdit').modal(setting_modal);\n            $('#scenarioEdit').html(response);\n            $('.fa-circle-o-notch').remove();\n        }).fail(function () {\n            $('#scenarioEdit').modal(setting_modal);\n            showMsg('シナリオ編集', '接続できません。');\n            $('.delete-scenario-all').css('display', 'none');\n        }).always(function () {\n            setLoad(false);\n        });\n    } else {\n        $('#scenarioEdit').modal(setting_modal);\n        showMsg('シナリオ編集', 'シナリオを選択してください。');\n        $('.delete-scenario-all').css('display', 'none');\n        $('.edit-scenario-button').css('display', 'none');\n        setLoad(false);\n    }\n}\n\n/**\r\n * Load modal detail scenario\r\n */\nfunction scenarioDetail() {\n    setLoad(true);\n    $('.edit-scenario-button').css('display', 'inline');\n    var target = $('.drawflow').find('.editor-scenario.selected').attr('id');\n    if (target && target.indexOf('node-s') != -1) {\n        var idScenario = target;\n        var data = $('#' + idScenario)[0].getAttribute('data');\n        $.ajax({\n            url: detailScenario,\n            method: 'GET',\n            data: {\n                data: data,\n                _token: csrf_token\n            }\n        }).done(function (response) {\n            $('#detailSenarioQA').modal(setting_modal);\n            $('#detailSenarioQA').html(response);\n            $('.fa-circle-o-notch').remove();\n        }).fail(function () {\n            $('#detailSenarioQA').modal(setting_modal);\n            showMsg('シナリオ 情報', '問題が発生しました。シナリオ情報取得できません。');\n            $('.delete-scenario-all').css('display', 'none');\n        }).always(function () {\n            setLoad(false);\n        });\n    } else {\n        $('#detailSenarioQA').modal(setting_modal);\n        showMsg('シナリオ 情報', 'シナリオを選択してください。');\n        $('.delete-scenario-all').css('display', 'none');\n        $('.edit-scenario-button').css('display', 'none');\n        setLoad(false);\n    }\n}\n\n/**\r\n * Load modal qa learning\r\n */\nfunction qaDetail() {\n    setLoad(true);\n    $('.edit-scenario-button').css('display', 'inline');\n    var target = $('.drawflow').find('.editor-qa.selected').attr('id');\n    if (target && target.indexOf('node-q') != -1) {\n        var idQA = target;\n        var data = $('#' + idQA)[0].getAttribute('data');\n        $.ajax({\n            url: detailQA,\n            method: 'GET',\n            data: {\n                data: data,\n                _token: csrf_token\n            }\n        }).done(function (response) {\n            $('#detailSenarioQA').modal(setting_modal);\n            $('#detailSenarioQA').html(response);\n            $('.fa-circle-o-notch').remove();\n            setLoad(false);\n        }).fail(function () {\n            $('#detailSenarioQA').modal(setting_modal);\n            showMsg('ＱＡデータ', '問題が発生しました。ＱＡ情報取得できません。');\n            $('.delete-scenario-all').css('display', 'none');\n            setLoad(false);\n        }).always(function () {});\n    } else {\n        $('#detailSenarioQA').modal(setting_modal);\n        showMsg('ＱＡデータ', 'ＱＡを選択してください。');\n        $('.delete-scenario-all').css('display', 'none');\n        $('.edit-scenario-button').css('display', 'none');\n        setLoad(false);\n    }\n}\n\n// Set location scenario\n// @params result array(obj)\n// @params position array(obj)\nfunction setLocation(result, position) {\n    Object.keys(result).map(function (val, index) {\n        result[val].pos_x = position[val].x;\n        result[val].pos_y = position[val].y;\n    });\n}\n\nfunction EditNodeElement() {\n    //validate\n    var name_scenario = $('form#entry_form_edit').find('input[name=\"name\"]').val().trim(),\n        order = $('form#entry_form_edit').find('input[name=\"order\"]').val(),\n        keyword_select = $('#clone_area_edit').find('select[name^=multi_data]'),\n        type = 'edit';\n    if (!validateParams(name_scenario, order, keyword_select, type)) {\n        return false;\n    }\n    var input = $(\"<input>\").attr(\"type\", \"hidden\").attr(\"name\", \"category_id\").val($('.scenarioCategory').val());\n    $('#entry_form_edit').append(input);\n    if (order) {\n        order = parseInt(order);\n        $('form#entry_form_edit').find('input[name=\"order\"]').val(order);\n    }\n    var form_data = $('form#entry_form_edit').serialize();\n    var id = $('.drawflow').find('.editor-scenario.selected').attr('id');\n    $.ajax({\n        url: urlSenario,\n        type: 'POST',\n        data: {\n            data: form_data,\n            _token: csrf_token\n        }\n    }).done(function (response) {\n        $('#scenarioEdit').modal('hide');\n        var title = response.name;\n        title = convertLongString(title);\n        var data = editor.drawflow.drawflow.Home.data;\n        data[id.replace('node-', '')].data = response;\n        data[id.replace('node-', '')].name = response.name;\n        data[id.replace('node-', '')].html = '<div><div class=\"title-box1 editor-scenario\" title=\"' + response.name + '\">' + title + '</div></div>';\n        editor.clear();\n        editor.drawflow.drawflow.Home.data = data;\n        editor.addHistory();\n        editor.load();\n        var elem = $('#' + 'node-s' + response.id.replace('s', ''));\n        editor.focusData(elem, false, 's' + response.id.replace('s', ''));\n    });\n}\n\nfunction setDataShowScenario(response, result) {\n    var result = {};\n    editor.drawflow = {\n        \"drawflow\": {\n            \"Home\": {\n                \"data\": result\n            }\n        }\n    };\n    if (dataScenario.length > 0) {\n        response.scenario.map(function (val, index) {\n            var multi_data = {};\n            if (val.keyword_groupno && val.keyword_id && val.keyword) {\n                multi_data = setMultipleKeyword(val);\n            }\n            if (Object.keys(multi_data).length > 0) {\n                val['multi_data'] = multi_data;\n            }\n            var title = val.name;\n            title = convertLongString(title);\n            var connections_out = [];\n            var connections_int = [];\n            if (val.parent_scenario_id != null) {\n                var arrConnect = val.parent_scenario_id.split(\",\");\n                arrConnect.map(function (item, i) {\n                    connections_int.push({\n                        \"node\": \"s\" + item.trim() + \"\",\n                        \"input\": \"output_1\"\n                    });\n                });\n            }\n            if (val.learning_id != null) {\n                connections_out.push({\n                    \"node\": \"q\" + val.learning_id + \"\",\n                    \"input\": \"output_1\"\n                });\n            }\n\n            result[\"s\" + val.scenario_id] = {\n                \"id\": \"s\" + val.scenario_id,\n                \"name\": val.name,\n                \"class\": \"editor-scenario\",\n                \"data\": val,\n                \"typenode\": false,\n                \"html\": \"\\n<div>\\n<div class=\\\"title-box1 editor-scenario\\\" title=\\\"\" + val.name + \"\\\">\" + title + \"</div>\\n\",\n                \"inputs\": {\n                    \"input_1\": {\n                        \"connections\": connections_int\n                    }\n                },\n                \"outputs\": {\n                    \"output_1\": {\n                        \"connections\": connections_out\n                    }\n                },\n                \"pos_x\": 30,\n                \"pos_y\": 70 * index,\n                \"count_childr\": []\n            };\n        });\n    }\n    if (dataQa.length > 0) {\n        response.answer.map(function (val, index) {\n            if (val.scenario_id) {\n                var title = val.question;\n                title = convertLongString(title);\n                var connections_int = [];\n                if (val.scenario_id != null) {\n                    var arrConnect = val.scenario_id.toString().split(\",\");\n                    var unique_arr_connect = arrConnect.filter(function (x, i, a) {\n                        return a.indexOf(x) == i;\n                    });\n                    unique_arr_connect.map(function (item, i) {\n                        connections_int.push({\n                            \"node\": \"s\" + item.trim() + \"\",\n                            \"input\": \"output_1\"\n                        });\n                    });\n                }\n                if (val.key_phrase) {\n                    var array_key_phrase = val.key_phrase.toString().split(\",\");\n                    var unique_array_key_phrase = array_key_phrase.filter(function (x, i, a) {\n                        return a.indexOf(x) == i;\n                    });\n                    val.key_phrase = unique_array_key_phrase.join(',');\n                }\n                if (val.answer_id) {\n                    result[\"q\" + val.answer_id] = {\n                        \"id\": \"q\" + val.answer_id,\n                        \"name\": val.question,\n                        \"class\": \"editor-qa\",\n                        \"data\": val,\n                        \"typenode\": false,\n                        \"html\": \"\\n<div>\\n<div class=\\\"title-box editor-qa-id\\\" title=\\\"\" + val.api_id + \"\\\">QA ID: \" + val.api_id + \"</div>\\n\\n<div class=\\\"title-box editor-qa\\\" title=\\\"\" + val.question + \"\\\">\" + title + \"</div>\\n</div>\\n\",\n                        \"inputs\": {\n                            \"input_1\": {\n                                \"connections\": connections_int\n                            }\n                        },\n                        \"outputs\": {},\n                        \"pos_x\": 600,\n                        \"pos_y\": 100 * index,\n                        \"count_childr\": []\n                    };\n                }\n            }\n        });\n    }\n    if (Object.keys(response.answerCopy).length > 0) {\n        Object.keys(response.answerCopy).map(function (val, index) {\n            if (response.answerCopy[val].scenario_id) {\n                var title = response.answerCopy[val].question;\n                title = convertLongString(title);\n                var connections_int = [];\n                if (response.answerCopy[val].scenario_id != null) {\n                    var arrConnect = response.answerCopy[val].scenario_id.toString().split(\",\");\n                    var unique_arr_connect = arrConnect.filter(function (x, i, a) {\n                        return a.indexOf(x) == i;\n                    });\n                    unique_arr_connect.map(function (item, i) {\n                        connections_int.push({\n                            \"node\": \"s\" + item.trim() + \"\",\n                            \"input\": \"output_1\"\n                        });\n                    });\n                }\n                if (response.answerCopy[val].key_phrase) {\n                    var array_key_phrase = response.answerCopy[val].key_phrase.toString().split(\",\");\n                    var unique_array_key_phrase = array_key_phrase.filter(function (x, i, a) {\n                        return a.indexOf(x) == i;\n                    });\n                    response.answerCopy[val].key_phrase = unique_array_key_phrase.join(',');\n                }\n                if (response.answerCopy[val].node_id) {\n                    result[val] = {\n                        \"id\": val,\n                        \"name\": response.answerCopy[val].question,\n                        \"class\": \"editor-qa\",\n                        \"data\": response.answerCopy[val],\n                        \"typenode\": false,\n                        \"html\": \"\\n<div>\\n<div class=\\\"title-box editor-qa-id\\\" title=\\\"\" + response.answerCopy[val].api_id + \"\\\">QA ID: \" + response.answerCopy[val].api_id + \"</div>\\n\\n<div class=\\\"title-box editor-qa\\\" title=\\\"\" + response.answerCopy[val].question + \"\\\">\" + title + \"</div>\\n</div>\\n\",\n                        \"inputs\": {\n                            \"input_1\": {\n                                \"connections\": connections_int\n                            }\n                        },\n                        \"outputs\": {},\n                        \"pos_x\": 600,\n                        \"pos_y\": 100 * index,\n                        \"count_childr\": []\n                    };\n                }\n            }\n        });\n    }\n\n    return result;\n}\n\n/**\r\n * Set and sort keyword by order & group_no\r\n * @param val\r\n */\nfunction setMultipleKeyword(val) {\n    var list_item = {};\n    var arr_keyword = val.keyword.split(',');\n    var arr_keyword_order = val.keyword_order.split(',');\n    val.keyword_groupno.toString().split(',').map(function (item, i) {\n        var obj = {\n            order: arr_keyword_order[i],\n            keyword: arr_keyword[i]\n        };\n        if (list_item[item] !== undefined) {\n            list_item[item].push(obj);\n        } else {\n            list_item[item] = [obj];\n        }\n    });\n    Object.keys(list_item).map(function (data, i) {\n        var arr_data_sort = list_item[data].sort(function (a, b) {\n            return a.order > b.order ? 1 : -1;\n        });\n        var arr_value_keyword = [];\n        Object.keys(arr_data_sort).map(function (key) {\n            if (arr_value_keyword.indexOf(arr_data_sort[key].keyword) == -1) {\n                arr_value_keyword.push(arr_data_sort[key].keyword);\n            }\n        });\n        list_item[data] = arr_value_keyword;\n    });\n    return list_item;\n}\n\nfunction copyNodeElement(id) {\n    if (!id) {\n        var target = $('.drawflow').find('.selected').attr('id');\n        if (!target) {\n            $('#scenarioEdit').modal(setting_modal);\n            showMsg('シナリオ複製', '対象のノードを選択してください。');\n            $('.delete-scenario-all').css('display', 'none');\n        } else {\n            pastElemCopy(target.substr(5));\n        }\n    } else {\n        pastElemCopy(id, true);\n    }\n}\n\nfunction deleteNodeElement() {\n    $('.edit-scenario-button').css('display', 'none');\n    var id = $('.drawflow').find('.selected').attr('id');\n    if (!id) {\n        $('#scenarioEdit').modal(setting_modal);\n        showMsg('シナリオ削除', '対象のノードを選択してください。');\n        $('.delete-scenario-all').css('display', 'none');\n    } else {\n        var ids = id;\n        var eventScenario = document.getElementById(id);\n        ids && editor.removeNodeId(ids), editor.connection_selected && editor.removeConnection(), null != ids && (eventScenario.classList.remove(\"selected\"), eventScenario = null), null != editor.connection_selected && (editor.connection_selected.classList.remove(\"selected\"), editor.removeReouteConnectionSelected(), editor.connection_selected = null);\n    }\n}\n\nfunction deleteAllNodeElement(e) {\n    e.preventDefault();\n    $(\".delete-scenario-all\").unbind();\n    $('#scenarioEdit').modal(setting_modal);\n    showMsg('シナリオ削除', 'すべてのノードを削除します。</br> 削除してよろしいですか。');\n    $('.edit-scenario-button').css('display', 'none');\n    if ($('#scenarioEdit .modal-footer').find('.edit-scenario-button').length > 0) {\n        var btn = $('#scenarioEdit .modal-footer').find('.edit-scenario-button')[0];\n        $(btn).attr('class', 'btn btn-danger delete-scenario-all');\n        $(btn).text('削除');\n    }\n    $('#scenarioEdit .delete-scenario-all').css('display', 'inline');\n    var arr_id = new Array();\n    $('.drawflow').children().map(function (i, val) {\n        if (val && val.childNodes.length > 0 && val.childNodes[0].tagName == 'DIV') {\n            arr_id.push(val.childNodes[0].getAttribute('id').replace('node-', ''));\n        }\n    });\n    $('.delete-scenario-all').on('click', function () {\n        setLoad(true);\n        $('.status-scenario').prop('disabled', true);\n        $.ajax({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            },\n            timeout: 0,\n            url: urlScenarioDelete,\n            method: 'DELETE',\n            data: {\n                id: arr_id,\n                type: 'deleteAll'\n            }\n        }).done(function (response) {\n            if (response) {\n                if (arr_id.length > 200) {\n                    window.location.reload();\n                }\n                loadScenario($('.fillterCategory').val());\n            } else {\n                $('#scenarioEdit').modal('hide');\n                alert('ノードの削除に失敗しました');\n                setLoad(false);\n                $('.delete-scenario-all').css('display', 'none');\n            }\n            $('.search-scenario').val('');\n            $('.search-QA').val('');\n        }).fail(function (jqXHR, textStatus, errorThrown) {\n            alert('ノードの削除に失敗しました');\n        }).always(function () {\n            $('#scenarioEdit').modal('hide');\n            $('.delete-scenario-all').css('display', 'none');\n            setLoad(false);\n            $('.status-scenario').prop('disabled', false);\n        });\n    });\n}\n\nfunction saveScenarioEditor() {\n    setLoad(true);\n    $('.status-scenario').prop('disabled', true);\n    var arr_id_scenario = '',\n        arr_relate_scenario = '',\n        arr_qa_str = '',\n        scenario_id_selector = $('.drawflow-node').has('.editor-scenario');\n    connection_selector = $('.connection');\n    arr_qa = new Array(), url = storeScenario;\n\n    scenario_id_selector.map(function (i, val) {\n        if (val.id.indexOf('node-s') > -1) {\n            arr_id_scenario += val.getAttribute('data');\n            if (i != scenario_id_selector.length - 1) {\n                arr_id_scenario += '@@add_item_node@@';\n            }\n        }\n    });\n\n    connection_selector.map(function (i, val) {\n        var classList = $(val).attr('class').split(' ');\n        if (classList[1] && classList[2]) {\n            arr_relate_scenario += classList[2].split(\"node_out_node-\").join(\"\") + ',' + classList[1].split(\"node_in_node-\").join(\"\");\n            if (i != connection_selector.length - 1) {\n                arr_relate_scenario += '@@add_item_relation@@';\n            }\n        }\n    });\n\n    $('.editor-qa').map(function name(i, val) {\n        if (val.id.indexOf('node-q') > -1) {\n            var position = $(val).position().top;\n            arr_qa.push({ 'id': val.id.toString(), 'position': position });\n        }\n    });\n\n    if (arr_qa.length > 0) {\n        arr_qa.sort(function (a, b) {\n            return a.position - b.position;\n        });\n        $.each(arr_qa, function (index, value) {\n            var temp = index + 1;\n            arr_qa[index]['order'] = temp;\n            arr_qa_str += JSON.stringify(arr_qa[index]);\n            if (index != arr_qa.length - 1) {\n                arr_qa_str += '@@add_item_qa@@';\n            }\n        });\n    }\n    $.ajax({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        },\n        url: url,\n        method: 'POST',\n        timeout: 0,\n        data: {\n            category_id: $('.fillterCategory').val() ? $('.fillterCategory').val() : null,\n            id_scenario: arr_id_scenario,\n            relate_scenario: arr_relate_scenario,\n            arr_qa_position: arr_qa_str\n        }\n    }).done(function (response) {\n        if (response == true) {\n            temp = 0;\n            editor.clearHistory();\n            $('.search-scenario').val('');\n            $('.search-QA').val('');\n            if (arr_id_scenario.length < 200) {\n                loadScenario($('.fillterCategory').val());\n                $('.status-scenario').prop('disabled', false);\n            } else {\n                window.location.reload();\n            }\n        } else {\n            alert('データの保存に失敗しました。');\n            setLoad(false);\n            $('.status-scenario').prop('disabled', false);\n        }\n    }).fail(function (jqXHR, textStatus, errorThrown) {\n        alert('データの保存に失敗しました。');\n        setLoad(false);\n        $('.status-scenario').prop('disabled', false);\n    });\n}\n\nvar ctrlDown = false,\n    ctrlKey = 17,\n    cmdKey = 91,\n    vKey = 86,\n    copy_id = 0,\n    undoKey = 90,\n    redoKey = 89,\n    sKey = 83,\n    cKey = 67;\n$('#drawflow').keydown(function (e) {\n    if (e.keyCode == ctrlKey || e.keyCode == cmdKey) ctrlDown = true;\n}).keyup(function (e) {\n    if (e.keyCode == ctrlKey || e.keyCode == cmdKey) ctrlDown = false;\n});\n// '#drawflow' Ctrl + C/V\nvar id_target = null;\n$('#drawflow').keydown(function (e) {\n    var target = $('.drawflow').find('.selected').attr('id');\n    if (ctrlDown) {\n        switch (e.keyCode) {\n            // Ctrl + C\n            case cKey:\n                if (!target) return !1;\n                id_target = target.toString().replace('node-', '');\n                break;\n            // Ctrl + V\n            case vKey:\n                if (id_target == null) {\n                    return false;\n                }\n                pastElemCopy(id_target);\n                break;\n            // Ctrl + Z\n            case undoKey:\n                editor.undo();\n                break;\n            // Ctrl + Y\n            case redoKey:\n                editor.redo();\n                break;\n            // Ctrl + Y\n            case sKey:\n                e.preventDefault();\n                saveScenarioEditor();\n                break;\n            default:\n                break;\n        }\n    }\n});\n\nfunction pastElemCopy(id, copyNodeQa) {\n    var target = editor.drawflow.drawflow.Home.data[id];\n    var pos_x = target.pos_x + 10;\n    var pos_y = target.pos_y + 10;\n    if (copyNodeQa) {\n        pos_x = $('#drawflow').scrollLeft() + 100;\n        pos_y = $('#drawflow').scrollTop() + 100;\n    }\n    if (id.indexOf('s') > -1) {\n        var response = JSON.parse($('#node-' + id).attr('data'));\n        var title = response.name;\n        title = convertLongString(title);\n        temp++;\n        var idScenario = 's' + temp + '-temp';\n        response.id = idScenario;\n        var scenario = '<div><div class=\"title-box1 editor-scenario\" title=\"' + response.name + '\">' + title + '</div></div>';\n        editor.addNode(response.name, 1, 1, pos_x, pos_y, 'editor-scenario', {}, scenario, !1, idScenario, JSON.stringify(response));\n        var elem = document.getElementById('node-' + idScenario);\n        var html = '<p class=\"' + idScenario + '\" onclick=\"editor.focusData(this)\">' + response.name + '</p>';\n        $('.content-scenario').append(html);\n        editor.focusData(elem, false, idScenario);\n    }\n\n    if (id.indexOf('qc') > -1) {\n        var response = JSON.parse($('#node-' + id).attr('data'));\n        var nameSubmit = $('#node-' + id).children().find('.editor-qa').attr('title');\n        var title = nameSubmit;\n        title = convertLongString(title);\n        temp++;\n        if (id.indexOf('-temp-') > -1) {\n            var idQaLearning = id.slice(0, id.lastIndexOf(\"-temp\")) + '-temp-' + temp;\n        } else {\n            var idQaLearning = id + '-temp-' + temp;\n        }\n\n        var qa = '<div><div class=\"title-box editor-qa-id\" title=\"' + $('#node-' + id).children().find('.editor-qa-id').attr('title') + '\">QA ID:' + $('#node-' + id).children().find('.editor-qa-id').attr('title') + '</div><div class=\"title-box editor-qa\" title=\"' + nameSubmit + '\">' + title + '</div></div>';\n        editor.addNode(nameSubmit, 1, 0, pos_x, pos_y, 'editor-qa', {}, qa, !1, idQaLearning, JSON.stringify(response));\n        var elem = document.getElementById('node-' + idQaLearning);\n        var html = '<p class=\"' + idQaLearning + '\" onclick=\"editor.focusData(this)\">' + title + '</p>';\n        $('.content-qa').append(html);\n        editor.focusData(elem, false, idQaLearning);\n    } else if (id.indexOf('q') > -1) {\n        var response = JSON.parse($('#node-' + id).attr('data'));\n        var nameSubmit = $('#node-' + id).children().find('.editor-qa').attr('title');\n        var title = nameSubmit;\n        title = convertLongString(title);\n        temp++;\n        if (id.indexOf('-temp-') > -1) {\n            var idQaLearning = id.slice(0, id.lastIndexOf(\"-temp\")) + '-temp-' + temp;\n        } else {\n            var idQaLearning = id + '-temp-' + temp;\n        }\n\n        var qa = '<div><div class=\"title-box editor-qa-id\" title=\"' + $('#node-' + id).children().find('.editor-qa-id').attr('title') + '\">QA ID:' + $('#node-' + id).children().find('.editor-qa-id').attr('title') + '</div><div class=\"title-box editor-qa\" title=\"' + nameSubmit + '\">' + title + '</div></div>';\n        editor.addNode(nameSubmit, 1, 0, pos_x, pos_y, 'editor-qa', {}, qa, !1, idQaLearning, JSON.stringify(response));\n        var elem = document.getElementById('node-' + idQaLearning);\n        var html = '<p class=\"' + idQaLearning + '\" onclick=\"editor.focusData(this)\">' + title + '</p>';\n        $('.content-qa').append(html);\n        editor.focusData(elem, false, idQaLearning);\n    }\n}\n\nfunction clearValidate() {\n    $('form#entry_form_edit').find('span.help-block').remove();\n    $('form#entry_form_edit').find('div.has-error').removeClass('has-error');\n    $('form#formScenario').find('span.help-block').remove();\n    $('form#formScenario').find('div.has-error').removeClass('has-error');\n    $('.err-add-scenario').find('span.help-block').remove();\n    $('.err-add-scenario').find('span.help-block-keyword').remove();\n    $('.err-edit-scenario').find('span.help-block').remove();\n    $('.err-edit-scenario').find('span.help-block-keyword').remove();\n    $('#clone_area').find('.has-error-empty').removeClass('has-error-empty');\n    $('#clone_area').find('.has-error').removeClass('has-error');\n    $('#clone_area_edit').find('.has-error-empty').removeClass('has-error-empty');\n    $('#clone_area_edit').find('.has-error').removeClass('has-error');\n}\n\nfunction validateParams(name, order, keyword_select, type) {\n    var check_validate = true;\n    clearValidate();\n    // ナリオ is required\n    if (name.trim() === '') {\n        if (type == 'edit') {\n            $('form#entry_form_edit').find('input[name=\"name\"]').parent().addClass('has-error').append('<span class=\"help-block\"><strong>シナリオは必須です。</strong></span>');\n        }\n        if (type == 'create') {\n            $('form#formScenario').find('input[name=\"name\"]').parent().addClass('has-error').append('<span class=\"help-block\"><strong>シナリオは必須です。</strong></span>');\n        }\n        check_validate = false;\n    }\n    // 表示順 is numberic\n    if (order) {\n        if (!/^\\d+$/.test(order)) {\n            if (type == 'edit') {\n                $('form#entry_form_edit').find('input[name=\"order\"]').parent().addClass('has-error').append('<span class=\"help-block\"><strong>表示順には0以上の数値を入力してください。</strong></span>');\n            }\n            if (type == 'create') {\n                $('#order').parent().addClass('has-error');\n                $('#order').parent().append('<span class=\"help-block\"><strong>表示順には0以上の数値を入力してください。</strong></span>');\n            }\n            check_validate = false;\n        }\n    }\n\n    if (keyword_select.length > 0) {\n        for (var i = 0; i < keyword_select.length; i++) {\n            if (keyword_select[i].value.trim() == '') {\n                $(keyword_select[i]).parent().parent().find('span.select2-selection').addClass('has-error-empty');\n                check_validate = false;\n                continue;\n            }\n        }\n    }\n    if (type == 'create') {\n        if ($('#clone_area').find('.has-error').length > 0) {\n            $('.err-add-scenario').append('<span class=\"help-block-keyword col-md-12\"><strong>関連キーワードが重複しています。</strong></span>');\n        }\n        if ($('#clone_area').find('.has-error-empty').length > 0) {\n            $('.err-add-scenario').append('<span class=\"help-block-keyword col-md-12\"><strong>関連キーワードは必須です。</strong></span>');\n        }\n    }\n\n    if (type == 'edit') {\n        if ($('#clone_area_edit').find('.has-error').length > 0 && type == 'edit') {\n            $('.err-edit-scenario').append('<span class=\"help-block-keyword col-md-12\"><strong>関連キーワードが重複しています。</strong></span>');\n        }\n        if ($('#clone_area_edit').find('.has-error-empty').length > 0 && type == 'edit') {\n            $('.err-edit-scenario').append('<span class=\"help-block-keyword col-md-12\"><strong>関連キーワードは必須です。</strong></span>');\n        }\n    }\n\n    if (check_validate) {\n        return true;\n    }\n    return false;\n}\n\nfunction fullScreenElem(fullScreen) {\n    var elem = $('#drawflow-editor');\n    if (elem[0].requestFullscreen) {\n        elem[0].requestFullscreen();\n    } else if (elem[0].mozRequestFullScreen) {\n        /* Firefox */\n        elem[0].mozRequestFullScreen();\n    } else if (elem[0].webkitRequestFullscreen) {\n        /* Chrome, Safari and Opera */\n        elem[0].webkitRequestFullscreen();\n    } else if (elem[0].msRequestFullscreen) {\n        /* IE/Edge */\n        elem[0].msRequestFullscreen();\n    }\n}\n\ndocument.addEventListener('fullscreenchange', exitHandler);\ndocument.addEventListener('webkitfullscreenchange', exitHandler);\ndocument.addEventListener('mozfullscreenchange', exitHandler);\ndocument.addEventListener('MSFullscreenChange', exitHandler);\n\nfunction exitHandler() {\n    if (!document.fullscreenElement && !document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\n        /*style*/\n        $('.bar-zoom-close').find('i.fa-compress').removeClass('fa-compress').addClass('fa-expand');\n        $('.bar-zoom-close').removeClass('bar-zoom-close').addClass('bar-zoom-fill');\n        $('.editor-body').css('height', 'calc(100vh - 250px)');\n        $('.col-left-btn').css('min-width', '198px');\n        editor.update_container_size(null, true);\n    } else {\n        $('.bar-zoom-fill').find('i.fa-expand').removeClass('fa-expand').addClass('fa-compress');\n        $('.bar-zoom-fill').removeClass('bar-zoom-fill').addClass('bar-zoom-close');\n        $('.editor-body').css('height', 'calc(100vh - 32px)');\n        $('.col-left-btn').css('width', '200px');\n        editor.update_container_size(null, true);\n    }\n}\n\nfunction closeFullScreenElem(fullScreen) {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n        /* Firefox */\n        document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n        /* Chrome, Safari and Opera */\n        document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n        /* IE/Edge */\n        document.msExitFullscreen();\n    }\n}\n\n(function ($) {\n\n    $(document).ready(function () {\n        $('.select2').select2({\n            dropdownParent: $('#mySelect2')\n        });\n    });\n\n    $(\".add-qa\").on('click', function () {\n        searchQa();\n    });\n\n    $(document).on('click', \".qa-Add-Node\", function () {\n        addNodeElement('qa', this);\n        $('#qaModal').modal('hide');\n    });\n\n    $(document).on('click', \".qa-Copy-Node\", function () {\n        var id = this.getAttribute('id');\n        copyNodeElement(id);\n        $('#qaModal').modal('hide');\n    });\n\n    /**\r\n     * Double click class editor-scenario\r\n     */\n    $(document).on('dblclick', \".editor-scenario\", function (event) {\n        event.preventDefault();\n        scenarioDetail();\n    });\n\n    /**\r\n     * Double click class editor-qa\r\n     */\n    $(document).on('dblclick', \".editor-qa\", function (event) {\n        event.preventDefault();\n        qaDetail();\n    });\n\n    $(\".edit-scenario\").on('click', function () {\n        scenarioEdit();\n    });\n\n    $(\".copy-node\").on('click', function () {\n        copyNodeElement();\n    });\n\n    $(\".delete-node\").on('click', function () {\n        deleteNodeElement();\n    });\n\n    $(\".save-scenario\").on('click', function () {\n        saveScenarioEditor();\n    });\n\n    $(\".delete-all-scenario\").on('click', function (e) {\n        deleteAllNodeElement(e);\n    });\n\n    $(\".search-scenario\").on('keyup', function () {\n        fillterDataScenario(this.value);\n    });\n\n    $(\".search-QA\").on('keyup', function () {\n        fillterDataQa(this.value);\n    });\n\n    $(\".qa-seach\").on('click', function () {\n        searchQa();\n    });\n\n    $(\".add-node-element-scenario\").on('click', function () {\n        addNodeElement('scenario');\n    });\n\n    $(document).on('click', '.edit-scenario-button', function () {\n        EditNodeElement();\n    });\n\n    $(\".fillterCategoryChange\").on('change', function () {\n        localStorage.setItem('category', this.value);\n        loadScenario(this.value);\n    });\n\n    $(document).on('click', '.bar-zoom-fill', function () {\n        fullScreenElem();\n    });\n\n    $(document).on('click', '.bar-zoom-close', function () {\n        closeFullScreenElem();\n    });\n\n    if (localStorage.getItem(\"category\") === null) {\n        loadScenario(null);\n    } else {\n        $('.fillterCategoryChange').val(localStorage.getItem(\"category\")).trigger('change');\n    }\n\n    $('.closeModalQa').click(function () {\n        $('.qaKeyword').val('');\n        $('.qaId').val('');\n    });\n    $('.closeModalAddSc').click(function () {\n        $(\".keyword-add-scenario\")[0].innerHTML = '';\n        $(\"#nameScenario\").val('');\n        $(\"#order\").val('');\n        $('#scenarioAdd').modal('hide');\n        clearValidate();\n    });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2RyYXdmbG93L2RyYXdmbG93LWN1c3RvbS5qcz85YmMyIl0sIm5hbWVzIjpbImh0bWxFbmMiLCJzIiwicmVwbGFjZSIsInNldHRpbmdfbW9kYWwiLCJiYWNrZHJvcCIsImtleWJvYXJkIiwic2V0TG9hZCIsImxvYWQiLCIkIiwiY3NzIiwic2VhcmNoUWEiLCJoYXNDbGFzcyIsImNhdGVnb3J5X2lkIiwiTnVtYmVyIiwidmFsIiwiYXBpSWQiLCJrZXl3b3JkIiwiYXJyX2lkX3FhIiwiQXJyYXkiLCJhamF4IiwidXJsIiwidXJsUWFTZWFyY2giLCJtZXRob2QiLCJkYXRhIiwiX3Rva2VuIiwiY3NyZl90b2tlbiIsImRvbmUiLCJyZXNwb25zZSIsIm1vZGFsIiwiY2hpbGRyZW4iLCJtYXAiLCJpIiwibGVuZ3RoIiwidGFnTmFtZSIsImdldEF0dHJpYnV0ZSIsInNsaWNlIiwicHVzaCIsImh0bWwiLCJkYXRhdGFibGVfcWEiLCJlbGVtZW50IiwiY29sb3JCdG4iLCJpbmRleE9mIiwidG9rZW4iLCJmYWlsIiwic2hvd01zZyIsImFsd2F5cyIsIm1vZGFsX2hlYWRlciIsIm1zZyIsImFkZE5vZGVFbGVtZW50IiwibmFtZSIsImUiLCJpZCIsImFwaV9pZCIsIm5hbWVTdWJtaXQiLCJ1bmRlZmluZWQiLCJwb3NfeCIsInNjcm9sbExlZnQiLCJlZGl0b3IiLCJjYW52YXNfeCIsInpvb20iLCJwb3NfeSIsInNjcm9sbFRvcCIsImNhbnZhc195IiwidGl0bGUiLCJjb252ZXJ0TG9uZ1N0cmluZyIsIm5hbWVfc2NlbmFyaW8iLCJmaW5kIiwidHJpbSIsIm9yZGVyIiwia2V5d29yZF9zZWxlY3QiLCJ0eXBlIiwidmFsaWRhdGVQYXJhbXMiLCJpbnB1dCIsImF0dHIiLCJhcHBlbmQiLCJmb3JtX2RhdGEiLCJzZXJpYWxpemUiLCJ1cmxTZW5hcmlvIiwidGVtcCIsInNjZW5hcmlvIiwiYWRkTm9kZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJpbm5lckhUTUwiLCJzaG93RGF0YVRvTGVmdCIsInNldEF0dHJpYnV0ZSIsImZvY3VzRGF0YSIsInFhIiwibG9hZFNjZW5hcmlvIiwicGFyYW1zIiwiY2xlYXIiLCJjbGVhckhpc3RvcnkiLCJ0cmlnZ2VyIiwiU2hvd0RhdGFRYSIsIlNob3dEYXRhU2NlbmFyaW8iLCJ1cmxTY2VuYXJpb0ZpbGx0ZXIiLCJ0aW1lb3V0IiwicmVtb3ZlQXR0ciIsImNsb25lRGF0YSIsInBhcnNlIiwiYWN0aW9uSGlzdG9yeSIsImNvbmNhdCIsImRhdGFRYSIsImFuc3dlciIsImRhdGFTY2VuYXJpbyIsImRhdGFRYUNQIiwiYW5zd2VyQ29weSIsInJlc3VsdCIsInNldERhdGFTaG93U2NlbmFyaW8iLCJzZXRMb2NhdGlvbiIsInBvc2l0aW9uIiwib3ZlcmZsb3dfdyIsIm92ZXJmbG93X2giLCJjb250YWluZXIiLCJlYWNoIiwidG9wIiwib3V0ZXJIZWlnaHQiLCJsZWZ0Iiwib3V0ZXJXaWR0aCIsIndpZHRoIiwiaGVpZ2h0Iiwiem9vbV9yZXNldCIsImFkZEhpc3RvcnkiLCJhbGVydCIsInByb3AiLCJkYXRhQ1AiLCJodG1sQ1AiLCJpbmRleCIsInNjZW5hcmlvX2lkIiwiYW5zd2VyX2lkIiwicXVlc3Rpb24iLCJPYmplY3QiLCJrZXlzIiwiam9pbiIsImRyYXdmbG93IiwiSG9tZSIsImZpbGx0ZXJEYXRhU2NlbmFyaW8iLCJkYXRhcyIsImZpbHRlciIsInRvTG93ZXJDYXNlIiwiZmlsbHRlckRhdGFRYSIsIm5vZGVfaWQiLCJkYXRhc1FBIiwiZGF0YXNDUCIsInJlZHVjZSIsInIiLCJzdHIiLCJzdWJzdHJpbmciLCJzY2VuYXJpb0VkaXQiLCJ0YXJnZXQiLCJpZFNjZW5hcmlvIiwiZWRpdFNjZW5hcmlvIiwicmVtb3ZlIiwic2NlbmFyaW9EZXRhaWwiLCJkZXRhaWxTY2VuYXJpbyIsInFhRGV0YWlsIiwiaWRRQSIsImRldGFpbFFBIiwieCIsInkiLCJFZGl0Tm9kZUVsZW1lbnQiLCJwYXJzZUludCIsImVsZW0iLCJtdWx0aV9kYXRhIiwia2V5d29yZF9ncm91cG5vIiwia2V5d29yZF9pZCIsInNldE11bHRpcGxlS2V5d29yZCIsImNvbm5lY3Rpb25zX291dCIsImNvbm5lY3Rpb25zX2ludCIsInBhcmVudF9zY2VuYXJpb19pZCIsImFyckNvbm5lY3QiLCJzcGxpdCIsIml0ZW0iLCJsZWFybmluZ19pZCIsInRvU3RyaW5nIiwidW5pcXVlX2Fycl9jb25uZWN0IiwiYSIsImtleV9waHJhc2UiLCJhcnJheV9rZXlfcGhyYXNlIiwidW5pcXVlX2FycmF5X2tleV9waHJhc2UiLCJsaXN0X2l0ZW0iLCJhcnJfa2V5d29yZCIsImFycl9rZXl3b3JkX29yZGVyIiwia2V5d29yZF9vcmRlciIsIm9iaiIsImFycl9kYXRhX3NvcnQiLCJzb3J0IiwiYiIsImFycl92YWx1ZV9rZXl3b3JkIiwia2V5IiwiY29weU5vZGVFbGVtZW50IiwicGFzdEVsZW1Db3B5Iiwic3Vic3RyIiwiZGVsZXRlTm9kZUVsZW1lbnQiLCJpZHMiLCJldmVudFNjZW5hcmlvIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInJlbW92ZU5vZGVJZCIsImNvbm5lY3Rpb25fc2VsZWN0ZWQiLCJyZW1vdmVDb25uZWN0aW9uIiwiY2xhc3NMaXN0IiwicmVtb3ZlUmVvdXRlQ29ubmVjdGlvblNlbGVjdGVkIiwiZGVsZXRlQWxsTm9kZUVsZW1lbnQiLCJwcmV2ZW50RGVmYXVsdCIsInVuYmluZCIsImJ0biIsInRleHQiLCJhcnJfaWQiLCJjaGlsZE5vZGVzIiwib24iLCJoZWFkZXJzIiwidXJsU2NlbmFyaW9EZWxldGUiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlbG9hZCIsImpxWEhSIiwidGV4dFN0YXR1cyIsImVycm9yVGhyb3duIiwic2F2ZVNjZW5hcmlvRWRpdG9yIiwiYXJyX2lkX3NjZW5hcmlvIiwiYXJyX3JlbGF0ZV9zY2VuYXJpbyIsImFycl9xYV9zdHIiLCJzY2VuYXJpb19pZF9zZWxlY3RvciIsImhhcyIsImNvbm5lY3Rpb25fc2VsZWN0b3IiLCJhcnJfcWEiLCJzdG9yZVNjZW5hcmlvIiwidmFsdWUiLCJpZF9zY2VuYXJpbyIsInJlbGF0ZV9zY2VuYXJpbyIsImFycl9xYV9wb3NpdGlvbiIsImN0cmxEb3duIiwiY3RybEtleSIsImNtZEtleSIsInZLZXkiLCJjb3B5X2lkIiwidW5kb0tleSIsInJlZG9LZXkiLCJzS2V5IiwiY0tleSIsImtleWRvd24iLCJrZXlDb2RlIiwia2V5dXAiLCJpZF90YXJnZXQiLCJ1bmRvIiwicmVkbyIsImNvcHlOb2RlUWEiLCJpZFFhTGVhcm5pbmciLCJsYXN0SW5kZXhPZiIsImNsZWFyVmFsaWRhdGUiLCJyZW1vdmVDbGFzcyIsImNoZWNrX3ZhbGlkYXRlIiwicGFyZW50IiwiYWRkQ2xhc3MiLCJ0ZXN0IiwiZnVsbFNjcmVlbkVsZW0iLCJmdWxsU2NyZWVuIiwicmVxdWVzdEZ1bGxzY3JlZW4iLCJtb3pSZXF1ZXN0RnVsbFNjcmVlbiIsIndlYmtpdFJlcXVlc3RGdWxsc2NyZWVuIiwibXNSZXF1ZXN0RnVsbHNjcmVlbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJleGl0SGFuZGxlciIsImZ1bGxzY3JlZW5FbGVtZW50Iiwid2Via2l0SXNGdWxsU2NyZWVuIiwibW96RnVsbFNjcmVlbiIsIm1zRnVsbHNjcmVlbkVsZW1lbnQiLCJ1cGRhdGVfY29udGFpbmVyX3NpemUiLCJjbG9zZUZ1bGxTY3JlZW5FbGVtIiwiZXhpdEZ1bGxzY3JlZW4iLCJtb3pDYW5jZWxGdWxsU2NyZWVuIiwid2Via2l0RXhpdEZ1bGxzY3JlZW4iLCJtc0V4aXRGdWxsc2NyZWVuIiwicmVhZHkiLCJzZWxlY3QyIiwiZHJvcGRvd25QYXJlbnQiLCJldmVudCIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJnZXRJdGVtIiwiY2xpY2siLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBSUEsU0FBU0EsT0FBVCxDQUFpQkMsQ0FBakIsRUFBb0I7QUFDaEIsV0FBT0EsRUFBRUMsT0FBRixDQUFVLElBQVYsRUFBZ0IsT0FBaEIsRUFD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QUFrRTVMLE9BQWxFLENBQTBFLFFBQTFFO0FBQ0g7O0FBRURwRixNQUFFLGVBQUYsRUFBbUJpUixLQUFuQixDQUF5QixZQUFXO0FBQ2hDalIsVUFBRSxZQUFGLEVBQWdCTSxHQUFoQixDQUFvQixFQUFwQjtBQUNBTixVQUFFLE9BQUYsRUFBV00sR0FBWCxDQUFlLEVBQWY7QUFDSCxLQUhEO0FBSUFOLE1BQUUsa0JBQUYsRUFBc0JpUixLQUF0QixDQUE0QixZQUFXO0FBQ25DalIsVUFBRSx1QkFBRixFQUEyQixDQUEzQixFQUE4QjJFLFNBQTlCLEdBQTBDLEVBQTFDO0FBQ0EzRSxVQUFFLGVBQUYsRUFBbUJNLEdBQW5CLENBQXVCLEVBQXZCO0FBQ0FOLFVBQUUsUUFBRixFQUFZTSxHQUFaLENBQWdCLEVBQWhCO0FBQ0FOLFVBQUUsY0FBRixFQUFrQm9CLEtBQWxCLENBQXdCLE1BQXhCO0FBQ0E4TjtBQUNILEtBTkQ7QUFPSCxDQTdHRCxFQTZHR2dDLE1BN0dIIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9kcmF3Zmxvdy9kcmF3Zmxvdy1jdXN0b20uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUmVwbGFjZSBzcGVjaWFsIGNoYXJhY3RlcnNcclxuICogQHBhcmFtIHtzdHJpbmd9IHNcclxuICovXHJcbmZ1bmN0aW9uIGh0bWxFbmMocykge1xyXG4gICAgcmV0dXJuIHMucmVwbGFjZSgvJi9nLCAnJmFtcDsnKVxyXG4gICAgLnJlcGxhY2UoLzwvZywgJyZsdDsnKVxyXG4gICAgLnJlcGxhY2UoLz4vZywgJyZndDsnKVxyXG4gICAgLnJlcGxhY2UoLycvZywgJyYjMzk7JylcclxuICAgIC5yZXBsYWNlKC9cIi9nLCAnJiMzNDsnKTtcclxufVxyXG5cclxuXHJcbi8vIFNldHRpbmcgbW9kYWxcclxudmFyIHNldHRpbmdfbW9kYWwgPSB7XHJcbiAgICBiYWNrZHJvcDogJ3N0YXRpYycsXHJcbiAgICBrZXlib2FyZDogZmFsc2VcclxufVxyXG5cclxuLyoqXHJcbiAqIFNob3cvaGlkZSBsb2FkIGFuZCBkaXNhYmxlL2VuYWJsZSBhcmVhIGVkaXRvclxyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGxvYWRcclxuICovXHJcbmZ1bmN0aW9uIHNldExvYWQobG9hZCkge1xyXG4gICAgaWYgKGxvYWQpIHtcclxuICAgICAgICAkKCcubGRzLXJvbGxlcicpLmNzcygnZGlzcGxheScsICdibG9jaycpO1xyXG4gICAgICAgICQoJy5kcmF3Zmxvdy1hcmVhJykuY3NzKCdvcGFjaXR5JywgJzAuNScpO1xyXG4gICAgICAgICQoJyNkcmF3Zmxvdy1lZGl0b3InKS5jc3MoJ3BvaW50ZXItZXZlbnRzJywgJ25vbmUnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJCgnLmxkcy1yb2xsZXInKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICQoJy5kcmF3Zmxvdy1hcmVhJykuY3NzKCdvcGFjaXR5JywgJzEnKTtcclxuICAgICAgICAkKCcjZHJhd2Zsb3ctZWRpdG9yJykuY3NzKCdwb2ludGVyLWV2ZW50cycsICdhbGwnKTtcclxuICAgIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFNlYXJjaCBkYXRhIFFBIGxlYXJpbmdcclxuICovXHJcbmZ1bmN0aW9uIHNlYXJjaFFhKCkge1xyXG4gICAgaWYgKCEkKCcjcWFNb2RhbCcpLmhhc0NsYXNzKCdpbicpKSB7XHJcbiAgICAgICAgc2V0TG9hZCh0cnVlKVxyXG4gICAgfVxyXG4gICAgdmFyIGNhdGVnb3J5X2lkID0gTnVtYmVyKCQoJy5xYUNhdGVnb3J5ICcpLnZhbCgpKSxcclxuICAgICAgICBhcGlJZCA9ICQoJy5hcGlJZCcpLnZhbCgpLFxyXG4gICAgICAgIGtleXdvcmQgPSAkKCcucWFLZXl3b3JkJykudmFsKCksXHJcbiAgICAgICAgYXJyX2lkX3FhID0gbmV3IEFycmF5KCk7XHJcbiAgICBjYXRlZ29yeV9pZCA9IChjYXRlZ29yeV9pZCA9PSAwKSA/IG51bGwgOiBjYXRlZ29yeV9pZDtcclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiB1cmxRYVNlYXJjaCxcclxuICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgYXBpSWQ6IGFwaUlkLFxyXG4gICAgICAgICAgICBrZXl3b3JkOiBrZXl3b3JkLFxyXG4gICAgICAgICAgICBjYXRlZ29yeV9pZDogY2F0ZWdvcnlfaWQsXHJcbiAgICAgICAgICAgIF90b2tlbjogY3NyZl90b2tlblxyXG4gICAgICAgIH1cclxuICAgIH0pLmRvbmUoZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgICAgICAkKCcjcWFNb2RhbCcpLm1vZGFsKHNldHRpbmdfbW9kYWwpO1xyXG4gICAgICAgICQoJy5kcmF3ZmxvdycpLmNoaWxkcmVuKCkubWFwKGZ1bmN0aW9uKGksIHZhbCkge1xyXG4gICAgICAgICAgICBpZiAodmFsLmNoaWxkcmVuICYmIHZhbC5jaGlsZHJlbi5sZW5ndGggPiAwICYmIHZhbC5jaGlsZHJlblswXS50YWdOYW1lID09ICdESVYnKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodmFsLmNoaWxkcmVuWzBdLmdldEF0dHJpYnV0ZSgnaWQnKS5zbGljZSg1LCA2KSA9PSAncScpIHtcclxuICAgICAgICAgICAgICAgICAgICBhcnJfaWRfcWEucHVzaChOdW1iZXIodmFsLmNoaWxkcmVuWzBdLmdldEF0dHJpYnV0ZSgnaWQnKS5zbGljZSg2KSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdmFyIGh0bWwgPSAnPHRyPjx0ZCBjb2xzcGFuPVwiNFwiIGNsYXNzPVwidGV4dC1jZW50ZXJcIj7jg4fjg7zjgr/jgYznmbvpjLLjgZXjgozjgabjgYTjgb7jgZvjgpPjgII8L3RkPjwvdHI+J1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5kYXRhdGFibGVfcWEubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBodG1sID0gcmVzcG9uc2UuZGF0YXRhYmxlX3FhLm1hcChmdW5jdGlvbihlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgY29sb3JCdG4gPSAoYXJyX2lkX3FhLmluZGV4T2YoZWxlbWVudFtcImlkXCJdKSAhPSAtMSkgPyAnYnRuLXByaW1hcnkgcWEtQ29weS1Ob2RlJyA6ICdidG4tcHJpbWFyeSBxYS1BZGQtTm9kZSc7XHJcbiAgICAgICAgICAgICAgICB2YXIgaHRtbCA9ICc8dHI+JztcclxuICAgICAgICAgICAgICAgIGh0bWwgKz0gJzx0ZCBjbGFzcz1cImlkX3FhX2FkZFwiPic7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9IGVsZW1lbnRbXCJhcGlfaWRcIl07XHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8L3RkPic7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8dGQgY2xhc3M9XCJhcGlfaWRfcWFfdGQgdGV4dC1jZW50ZXJcIj48L3RkPic7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8dGQ+JztcclxuICAgICAgICAgICAgICAgIGh0bWwgKz0gaHRtbEVuYyhlbGVtZW50W1wicXVlc3Rpb25cIl0pO1xyXG4gICAgICAgICAgICAgICAgaHRtbCArPSAnPC90ZD4nO1xyXG4gICAgICAgICAgICAgICAgaHRtbCArPSAnPHRkPic7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9IGh0bWxFbmMoZWxlbWVudFtcImFuc3dlclwiXSk7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8L3RkPic7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8dGQgY2xhc3M9XCJ0ZXh0LWNlbnRlclwiPic7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8YnV0dG9uIGlkPVwicScgKyBlbGVtZW50W1wiaWRcIl0gKyAnXCIgdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnRuICcgKyBjb2xvckJ0biArICdcIiBkYXRhLXRleHQtcWE9XCInICsgaHRtbEVuYyhlbGVtZW50W1wicXVlc3Rpb25cIl0pICsgJ1wiIGFwaV9pZD1cIicgKyBlbGVtZW50W1wiYXBpX2lkXCJdICsgJ1wiPiDov73liqAgPC9idXR0b24+JztcclxuICAgICAgICAgICAgICAgIGh0bWwgKz0gJzwvdGQ+JztcclxuICAgICAgICAgICAgICAgIGh0bWwgKz0gJzwvdHI+JztcclxuICAgICAgICAgICAgICAgIHJldHVybiBodG1sO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJCgnLnRhYmxlLXNjcm9sbCB0Ym9keScpLmh0bWwoaHRtbCk7XHJcbiAgICAgICAgY3NyZl90b2tlbiA9IHJlc3BvbnNlLnRva2VuO1xyXG4gICAgfSkuZmFpbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnI3NjZW5hcmlvRWRpdCcpLm1vZGFsKHNldHRpbmdfbW9kYWwpO1xyXG4gICAgICAgIHNob3dNc2coJ1FB55m76YyyJywgJ+aOpee2muOBp+OBjeOBvuOBm+OCk+OAgicpXHJcbiAgICAgICAgJCgnLmRlbGV0ZS1zY2VuYXJpby1hbGwnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgfSkuYWx3YXlzKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZXRMb2FkKGZhbHNlKVxyXG4gICAgfSlcclxufVxyXG5cclxuZnVuY3Rpb24gc2hvd01zZyhtb2RhbF9oZWFkZXIsIG1zZykge1xyXG4gICAgJCgnLm1vZGFsLXRpdGxlJykuaHRtbChtb2RhbF9oZWFkZXIpO1xyXG4gICAgJCgnLm1lc3NhZ2VfYm9keScpLmh0bWwobXNnKTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkTm9kZUVsZW1lbnQobmFtZSwgZSkge1xyXG4gICAgdmFyIGlkID0gbnVsbDtcclxuICAgIHZhciBhcGlfaWQgPSBudWxsO1xyXG4gICAgdmFyIG5hbWVTdWJtaXQgPSAkKFwiI25hbWVTY2VuYXJpb1wiKS52YWwoKTtcclxuICAgIGlmIChlICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBuYW1lU3VibWl0ID0gZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdGV4dC1xYScpO1xyXG4gICAgICAgIGlkID0gZS5nZXRBdHRyaWJ1dGUoJ2lkJyk7XHJcbiAgICAgICAgYXBpX2lkID0gZS5nZXRBdHRyaWJ1dGUoJ2FwaV9pZCcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICB2YXIgcG9zX3ggPSAoJCgnLnBhcmVudC1kcmF3ZmxvdycpLnNjcm9sbExlZnQoKSArIDEwMCAtIGVkaXRvci5jYW52YXNfeCkgLyBlZGl0b3Iuem9vbTtcclxuICAgIHZhciBwb3NfeSA9ICgkKCcucGFyZW50LWRyYXdmbG93Jykuc2Nyb2xsVG9wKCkgKyAxMDAgLSBlZGl0b3IuY2FudmFzX3kpIC8gZWRpdG9yLnpvb207XHJcbiAgICBcclxuICAgIHZhciB0aXRsZSA9IG5hbWVTdWJtaXQ7XHJcbiAgICB0aXRsZSA9IGNvbnZlcnRMb25nU3RyaW5nKHRpdGxlKTtcclxuICAgIC8vdmFsaWRhdGVcclxuICAgIHZhciBuYW1lX3NjZW5hcmlvID0gJCgnZm9ybSNmb3JtU2NlbmFyaW8nKS5maW5kKCdpbnB1dFtuYW1lPVwibmFtZVwiXScpLnZhbCgpLnRyaW0oKSxcclxuICAgIG9yZGVyID0gJCgnZm9ybSNmb3JtU2NlbmFyaW8nKS5maW5kKCdpbnB1dFtuYW1lPVwib3JkZXJcIl0nKS52YWwoKSxcclxuICAgIGtleXdvcmRfc2VsZWN0ID0gJCgnI2Nsb25lX2FyZWEnKS5maW5kKCdzZWxlY3RbbmFtZV49bXVsdGlfZGF0YV0nKSxcclxuICAgIHR5cGUgPSAnY3JlYXRlJztcclxuXHJcbiAgICBpZiAoKG5hbWUgPT0gJ3NjZW5hcmlvJykgJiYgIXZhbGlkYXRlUGFyYW1zKG5hbWVfc2NlbmFyaW8sIG9yZGVyLCBrZXl3b3JkX3NlbGVjdCwgdHlwZSkpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBzd2l0Y2ggKG5hbWUpIHtcclxuICAgICAgICBjYXNlICdzY2VuYXJpbyc6XHJcbiAgICAgICAgICAgIHZhciBpbnB1dCA9ICQoXCI8aW5wdXQ+XCIpLmF0dHIoXCJ0eXBlXCIsIFwiaGlkZGVuXCIpLmF0dHIoXCJuYW1lXCIsIFwiY2F0ZWdvcnlfaWRcIikudmFsKCQoJy5zY2VuYXJpb0NhdGVnb3J5JykudmFsKCkpO1xyXG4gICAgICAgICAgICAkKCcjZm9ybVNjZW5hcmlvJykuYXBwZW5kKGlucHV0KTtcclxuICAgICAgICAgICAgdmFyIGZvcm1fZGF0YSA9ICQoJ2Zvcm0jZm9ybVNjZW5hcmlvJykuc2VyaWFsaXplKCk7IC8vRW5jb2RlIGZvcm0gZWxlbWVudHMgZm9yIHN1Ym1pc3Npb25cclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIHVybDogdXJsU2VuYXJpbyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBmb3JtX2RhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgX3Rva2VuOiBjc3JmX3Rva2VuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pLmRvbmUoZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgICAgIHRlbXArKztcclxuICAgICAgICAgICAgICAgIGxldCBpZCA9ICdzJyArIHRlbXAgKyAnLXRlbXAnO1xyXG4gICAgICAgICAgICAgICAgdmFyIHNjZW5hcmlvID0gJzxkaXY+PGRpdiBjbGFzcz1cInRpdGxlLWJveDEgZWRpdG9yLXNjZW5hcmlvXCIgdGl0bGU9XCInICsgbmFtZVN1Ym1pdCArICdcIj4nICsgdGl0bGUgKyAnPC9kaXY+PC9kaXY+JztcclxuICAgICAgICAgICAgICAgIHJlc3BvbnNlLmlkID0gaWQ7XHJcbiAgICAgICAgICAgICAgICBlZGl0b3IuYWRkTm9kZShuYW1lU3VibWl0LCAxLCAxLCBwb3NfeCwgcG9zX3ksICdlZGl0b3Itc2NlbmFyaW8nLCB7fSwgc2NlbmFyaW8sICExLCBpZCwgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpKTtcclxuICAgICAgICAgICAgICAgICQoXCIua2V5d29yZC1hZGQtc2NlbmFyaW9cIilbMF0uaW5uZXJIVE1MID0gJyc7XHJcbiAgICAgICAgICAgICAgICAkKFwiI25hbWVTY2VuYXJpb1wiKS52YWwoJycpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNvcmRlclwiKS52YWwoJycpO1xyXG4gICAgICAgICAgICAgICAgZWRpdG9yLnNob3dEYXRhVG9MZWZ0KCk7XHJcbiAgICAgICAgICAgICAgICAkKCcjbm9kZS0nICsgaWQpWzBdLnNldEF0dHJpYnV0ZSgnb25jbGljaycsICdlZGl0b3IuZm9jdXNEYXRhKHRoaXMsIGZhbHNlLCBcXCcnICsgaWQgKyAnXFwnKScpO1xyXG4gICAgICAgICAgICAgICAgZWRpdG9yLmZvY3VzRGF0YShlLCBmYWxzZSwgaWQpO1xyXG4gICAgICAgICAgICAgICAgJCgnI3NjZW5hcmlvQWRkJykubW9kYWwoJ2hpZGUnKTtcclxuICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjc2NlbmFyaW9FZGl0JykubW9kYWwoc2V0dGluZ19tb2RhbCk7XHJcbiAgICAgICAgICAgICAgICBzaG93TXNnKCfjgrfjg4rjg6rjgqrov73liqAnLCAn44K344OK44Oq44Kq6L+95Yqg44Gn44GN44G+44Gb44KT44CCJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcuZGVsZXRlLXNjZW5hcmlvLWFsbCcpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgICAgIH0pLmFsd2F5cyhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRMb2FkKGZhbHNlKVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAncWEnOlxyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdXJsOiB1cmxRYVNlYXJjaCxcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBpSWQ6IGFwaV9pZCxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnYWRkJyxcclxuICAgICAgICAgICAgICAgICAgICBfdG9rZW46IGNzcmZfdG9rZW5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSkuZG9uZShmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHFhID0gJzxkaXY+PGRpdiBjbGFzcz1cInRpdGxlLWJveCBlZGl0b3ItcWEtaWRcIiB0aXRsZT1cIicgKyBhcGlfaWQgKyAnXCI+UUEgSUQ6ICcgKyBhcGlfaWQgKyAnPC9kaXY+PGRpdiBjbGFzcz1cInRpdGxlLWJveCBlZGl0b3ItcWFcIiB0aXRsZT1cIicgKyBuYW1lU3VibWl0ICsgJ1wiPicgKyB0aXRsZSArICc8L2Rpdj48L2Rpdj4nO1xyXG4gICAgICAgICAgICAgICAgZWRpdG9yLmFkZE5vZGUobmFtZVN1Ym1pdCwgMSwgMCwgcG9zX3gsIHBvc195LCAnZWRpdG9yLXFhJywge30sIHFhLCAhMSwgaWQsIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmRhdGF0YWJsZV9xYVswXSkpO1xyXG4gICAgICAgICAgICAgICAgJCgnLnFhS2V5d29yZCcpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcucWFJZCcpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgICAgICBlZGl0b3Iuc2hvd0RhdGFUb0xlZnQoKTtcclxuICAgICAgICAgICAgICAgICQoJyNxYU1vZGFsJykubW9kYWwoJ2hpZGUnKTtcclxuICAgICAgICAgICAgICAgIGVkaXRvci5mb2N1c0RhdGEoZSwgZmFsc2UsIGlkKTtcclxuICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjc2NlbmFyaW9FZGl0JykubW9kYWwoc2V0dGluZ19tb2RhbCk7XHJcbiAgICAgICAgICAgICAgICBzaG93TXNnKCdRQeeZu+mMsicsICdRQei/veWKoOOBp+OBjeOBvuOBm+OCk+OAgicpO1xyXG4gICAgICAgICAgICAgICAgJCgnLmRlbGV0ZS1zY2VuYXJpby1hbGwnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBsb2FkU2NlbmFyaW8ocGFyYW1zLCBpZCkge1xyXG4gICAgJCgnI2RyYXdmbG93LWVkaXRvcicpLmNzcygncG9pbnRlci1ldmVudHMnLCAnbm9uZScpO1xyXG4gICAgZWRpdG9yLmNsZWFyKCk7XHJcbiAgICBlZGl0b3IuY2xlYXJIaXN0b3J5KCk7XHJcbiAgICBzZXRMb2FkKHRydWUpXHJcbiAgICAkKCcuc2NlbmFyaW9DYXRlZ29yeScpLnZhbChwYXJhbXMpLnRyaWdnZXIoJ2NoYW5nZScpO1xyXG4gICAgJCgnLnFhQ2F0ZWdvcnknKS52YWwocGFyYW1zKS50cmlnZ2VyKCdjaGFuZ2UnKTtcclxuICAgICQoJy5maWxsdGVyQ2F0ZWdvcnknKS5hdHRyKCdkaXNhYmxlZCcsIHRydWUpO1xyXG4gICAgU2hvd0RhdGFRYShbXSk7XHJcbiAgICBTaG93RGF0YVNjZW5hcmlvKFtdKTtcclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiB1cmxTY2VuYXJpb0ZpbGx0ZXIsXHJcbiAgICAgICAgdGltZW91dDogMCxcclxuICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXMsXHJcbiAgICAgICAgICAgIF90b2tlbjogY3NyZl90b2tlblxyXG4gICAgICAgIH1cclxuICAgIH0pLmRvbmUoZnVuY3Rpb24gbmFtZShyZXNwb25zZSkge1xyXG4gICAgICAgICQoJy5maWxsdGVyQ2F0ZWdvcnknKS5yZW1vdmVBdHRyKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgIHZhciBjbG9uZURhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7XHJcbiAgICAgICAgYWN0aW9uSGlzdG9yeSA9IFtdLmNvbmNhdChjbG9uZURhdGEpO1xyXG4gICAgICAgIGRhdGFRYSA9IHJlc3BvbnNlLmFuc3dlcjtcclxuICAgICAgICBkYXRhU2NlbmFyaW8gPSByZXNwb25zZS5zY2VuYXJpbztcclxuICAgICAgICBkYXRhUWFDUCA9IHJlc3BvbnNlLmFuc3dlckNvcHk7XHJcblxyXG4gICAgICAgIC8vU2V0IGRhdGEgb24gc2hvdyBkcmF3anNcclxuICAgICAgICByZXN1bHQgPSBzZXREYXRhU2hvd1NjZW5hcmlvKHJlc3BvbnNlKVxyXG5cclxuICAgICAgICAvL1NldCBsb2NhdGlvbiBzY2VuYXJpb1xyXG4gICAgICAgIHNldExvY2F0aW9uKHJlc3VsdCwgcmVzcG9uc2UucG9zaXRpb24pO1xyXG5cclxuICAgICAgICAkKCcuZHJhd2Zsb3ctYXJlYScpLmNzcygnb3BhY2l0eScsICcxJyk7XHJcbiAgICAgICAgaWYgKGlkKSB7XHJcbiAgICAgICAgICAgIGVkaXRvci5mb2N1c0RhdGEodGhpcywgZmFsc2UsIGlkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIG92ZXJmbG93X3cgPSAwLFxyXG4gICAgICAgICAgICBvdmVyZmxvd19oID0gMCxcclxuICAgICAgICAgICAgY29udGFpbmVyID0gJCgnI2RyYXdmbG93Jyk7XHJcbiAgICAgICAgY29udGFpbmVyLmZpbmQoJy5kcmF3Zmxvdy1ub2RlJykuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYgKCQodGhpcykucG9zaXRpb24oKS50b3AgKyAkKHRoaXMpLm91dGVySGVpZ2h0KCkgKyA1MCA+IGNvbnRhaW5lci5jaGlsZHJlbignLmRyYXdmbG93Jykub3V0ZXJIZWlnaHQoKSkge1xyXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3dfaCA9IGNvbnRhaW5lci5jaGlsZHJlbignLmRyYXdmbG93Jykub3V0ZXJIZWlnaHQoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLnBvc2l0aW9uKCkubGVmdCArICQodGhpcykub3V0ZXJXaWR0aCgpICsgNTAgPiBjb250YWluZXIuY2hpbGRyZW4oJy5kcmF3ZmxvdycpLm91dGVyV2lkdGgoKSkge1xyXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3dfdyA9IGNvbnRhaW5lci5jaGlsZHJlbignLmRyYXdmbG93Jykub3V0ZXJXaWR0aCgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAob3ZlcmZsb3dfaCB8fCBvdmVyZmxvd193KSB7XHJcbiAgICAgICAgICAgIGNvbnRhaW5lci5jaGlsZHJlbignLmRyYXdmbG93JykuY3NzKHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiBjb250YWluZXIuY2hpbGRyZW4oJy5kcmF3ZmxvdycpLm91dGVyV2lkdGgoKSArIG92ZXJmbG93X3csXHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGNvbnRhaW5lci5jaGlsZHJlbignLmRyYXdmbG93Jykub3V0ZXJIZWlnaHQoKSArIG92ZXJmbG93X2hcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVkaXRvci56b29tX3Jlc2V0KCk7XHJcblxyXG4gICAgICAgIC8vT24gc2hvd1xyXG4gICAgICAgIGVkaXRvci5sb2FkKCk7XHJcbiAgICAgICAgZWRpdG9yLmFkZEhpc3RvcnkoKTtcclxuICAgIH0pLmZhaWwoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgYWxlcnQoIFwi5o6l57aa44Gn44GN44G+44Gb44KT44CCXCIgKTtcclxuICAgIH0pLmFsd2F5cyhmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcuc3RhdHVzLXNjZW5hcmlvJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgJCgnI2RyYXdmbG93LWVkaXRvcicpLmNzcygncG9pbnRlci1ldmVudHMnLCAnYWxsJyk7XHJcbiAgICAgICAgJCgnLmxkcy1yb2xsZXInKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIFNob3dEYXRhUWEoZGF0YSwgZGF0YUNQKSB7XHJcbiAgICAkKCcuY29udGVudC1xYScpLmlubmVySFRNTCA9ICcnO1xyXG4gICAgbGV0IGh0bWwgPSBuZXcgQXJyYXkoKSxcclxuICAgICAgICBodG1sQ1AgPSBuZXcgQXJyYXkoKTtcclxuICAgIGh0bWwgPSBkYXRhLm1hcChmdW5jdGlvbih2YWwsIGluZGV4KSB7XHJcbiAgICAgICAgaWYgKHZhbC5zY2VuYXJpb19pZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJzxwIGNsYXNzPVwicScgKyB2YWwuYW5zd2VyX2lkICsgJ1wiIG9uY2xpY2s9XCJlZGl0b3IuZm9jdXNEYXRhKHRoaXMpXCI+JyArIHZhbC5xdWVzdGlvbiArICc8L3A+JztcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIGlmIChkYXRhQ1ApIHtcclxuICAgICAgICBodG1sQ1AgPSBPYmplY3Qua2V5cyhkYXRhQ1ApLm1hcChmdW5jdGlvbih2YWwsIGluZGV4KSB7XHJcbiAgICAgICAgICAgIGlmIChkYXRhQ1BbdmFsXS5zY2VuYXJpb19pZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICc8cCBjbGFzcz1cIicgKyB2YWwgKyAnXCIgb25jbGljaz1cImVkaXRvci5mb2N1c0RhdGEodGhpcylcIj4nICsgZGF0YUNQW3ZhbF0ucXVlc3Rpb24gKyAnPC9wPic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgICQoJy5jb250ZW50LXFhJykuaHRtbChodG1sLmNvbmNhdChodG1sQ1ApLmpvaW4oJycpKTtcclxufVxyXG5cclxuZnVuY3Rpb24gU2hvd0RhdGFTY2VuYXJpbyhkYXRhU2NlbmFyaW8pIHtcclxuICAgICQoJy5jb250ZW50LXNjZW5hcmlvJykuaW5uZXJIVE1MID0gJyc7XHJcbiAgICBsZXQgaHRtbCA9IGRhdGFTY2VuYXJpby5tYXAoZnVuY3Rpb24odmFsLCBpbmRleCkge1xyXG4gICAgICAgIGxldCBpZCA9IGVkaXRvci5kcmF3Zmxvdy5kcmF3Zmxvdy5Ib21lLmRhdGFbdmFsXS5kYXRhLmlkO1xyXG4gICAgICAgIGxldCBuYW1lID0gZWRpdG9yLmRyYXdmbG93LmRyYXdmbG93LkhvbWUuZGF0YVt2YWxdLmRhdGEubmFtZTtcclxuICAgICAgICByZXR1cm4gJzxwIGNsYXNzPVwicycgKyBpZCArICdcIiBvbmNsaWNrPVwiZWRpdG9yLmZvY3VzRGF0YSh0aGlzKVwiPicgKyBuYW1lICsgJzwvcD4nO1xyXG4gICAgfSk7XHJcbiAgICAkKCcuY29udGVudC1zY2VuYXJpbycpLmh0bWwoaHRtbCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpbGx0ZXJEYXRhU2NlbmFyaW8ocGFyYW1zKSB7XHJcbiAgICBsZXQgZGF0YXMgPSBPYmplY3Qua2V5cyhlZGl0b3IuZHJhd2Zsb3cuZHJhd2Zsb3cuSG9tZS5kYXRhKS5maWx0ZXIoZnVuY3Rpb24odmFsLCBpKSB7XHJcbiAgICAgICAgaWYgKHZhbC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ3MnKSA+PSAwICYmIGVkaXRvci5kcmF3Zmxvdy5kcmF3Zmxvdy5Ib21lLmRhdGFbdmFsXS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihwYXJhbXMudG9Mb3dlckNhc2UoKSkgPj0gMCkgIHtcclxuICAgICAgICAgICAgcmV0dXJuIGVkaXRvci5kcmF3Zmxvdy5kcmF3Zmxvdy5Ib21lLmRhdGFbdmFsXTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIFNob3dEYXRhU2NlbmFyaW8oZGF0YXMpXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpbGx0ZXJEYXRhUWEocGFyYW1zKSB7XHJcbiAgICB2YXIgZGF0YXMgPSBbXTtcclxuICAgIGRhdGFRYS5tYXAoZnVuY3Rpb24odmFsLCBpbmRleCkge1xyXG4gICAgICAgIGRhdGFzLnB1c2goe1xyXG4gICAgICAgICAgICBcImFwaV9pZFwiOiB2YWwuYXBpX2lkLFxyXG4gICAgICAgICAgICBcIm5vZGVfaWRcIjp2YWwubm9kZV9pZCxcclxuICAgICAgICAgICAgXCJxdWVzdGlvblwiOiAgdmFsLnF1ZXN0aW9uLFxyXG4gICAgICAgICAgICBcInNjZW5hcmlvX2lkXCI6ICB2YWwuc2NlbmFyaW9faWQsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5rZXlzKGRhdGFRYUNQKS5maWx0ZXIoZnVuY3Rpb24odmFsLCBpKSB7XHJcbiAgICAgICAgZGF0YXMucHVzaCh7XHJcbiAgICAgICAgICAgIFwiYXBpX2lkXCI6IGRhdGFRYUNQW3ZhbF0uYXBpX2lkLFxyXG4gICAgICAgICAgICBcIm5vZGVfaWRcIjogZGF0YVFhQ1BbdmFsXS5ub2RlX2lkLFxyXG4gICAgICAgICAgICBcInF1ZXN0aW9uXCI6ICBkYXRhUWFDUFt2YWxdLnF1ZXN0aW9uLFxyXG4gICAgICAgICAgICBcInNjZW5hcmlvX2lkXCI6ICBkYXRhUWFDUFt2YWxdLnNjZW5hcmlvX2lkLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBsZXQgZGF0YXNRQT0gZGF0YVFhLmZpbHRlcihmdW5jdGlvbih2YWwsIGkpIHtcclxuICAgICAgICByZXR1cm4gdmFsW1wicXVlc3Rpb25cIl0udG9Mb3dlckNhc2UoKS5pbmRleE9mKHBhcmFtcy50b0xvd2VyQ2FzZSgpKSA+PSAwO1xyXG4gICAgfSk7XHJcbiAgICBsZXQgZGF0YXNDUCA9IE9iamVjdC5rZXlzKGRhdGFRYUNQKS5yZWR1Y2UoZnVuY3Rpb24ociwgZSkge1xyXG4gICAgICAgIGlmIChkYXRhUWFDUFtlXS5xdWVzdGlvbi50b0xvd2VyQ2FzZSgpLmluZGV4T2YocGFyYW1zLnRvTG93ZXJDYXNlKCkpID49IDApIHJbZV0gPSBkYXRhUWFDUFtlXVxyXG4gICAgICAgIHJldHVybiByO1xyXG4gICAgfSwge30pXHJcbiAgICBTaG93RGF0YVFhKGRhdGFzUUEsIGRhdGFzQ1ApO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjb252ZXJ0TG9uZ1N0cmluZyhzdHIpIHtcclxuICAgIGlmIChzdHIubGVuZ3RoID49IDExKSB7XHJcbiAgICAgICAgcmV0dXJuIHN0ciA9IHN0ci5zdWJzdHJpbmcoMCwgMTEpICsgJy4uLic7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc3RyXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNjZW5hcmlvRWRpdCgpIHtcclxuICAgIHNldExvYWQodHJ1ZSlcclxuICAgICQoJy5lZGl0LXNjZW5hcmlvLWJ1dHRvbicpLmNzcygnZGlzcGxheScsICdpbmxpbmUnKTtcclxuICAgIGxldCB0YXJnZXQgPSAkKCcuZHJhd2Zsb3cnKS5maW5kKCcuZWRpdG9yLXNjZW5hcmlvLnNlbGVjdGVkJykuYXR0cignaWQnKTtcclxuICAgIGlmICh0YXJnZXQgJiYgdGFyZ2V0LmluZGV4T2YoJ25vZGUtcycpICE9IC0xKSB7XHJcbiAgICAgICAgbGV0IGlkU2NlbmFyaW8gPSB0YXJnZXQ7XHJcbiAgICAgICAgbGV0IGRhdGEgPSAkKCcjJyArIGlkU2NlbmFyaW8pWzBdLmdldEF0dHJpYnV0ZSgnZGF0YScpO1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybDogZWRpdFNjZW5hcmlvLFxyXG4gICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgICAgICAgICAgX3Rva2VuOiBjc3JmX3Rva2VuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICQoJyNzY2VuYXJpb0VkaXQnKS5tb2RhbChzZXR0aW5nX21vZGFsKTtcclxuICAgICAgICAgICAgJCgnI3NjZW5hcmlvRWRpdCcpLmh0bWwocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAkKCcuZmEtY2lyY2xlLW8tbm90Y2gnKS5yZW1vdmUoKTtcclxuICAgICAgICB9KS5mYWlsKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCcjc2NlbmFyaW9FZGl0JykubW9kYWwoc2V0dGluZ19tb2RhbCk7XHJcbiAgICAgICAgICAgIHNob3dNc2coJ+OCt+ODiuODquOCque3qOmbhicsICfmjqXntprjgafjgY3jgb7jgZvjgpPjgIInKTtcclxuICAgICAgICAgICAgJCgnLmRlbGV0ZS1zY2VuYXJpby1hbGwnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgIH0pLmFsd2F5cyhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHNldExvYWQoZmFsc2UpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgICQoJyNzY2VuYXJpb0VkaXQnKS5tb2RhbChzZXR0aW5nX21vZGFsKTtcclxuICAgICAgICBzaG93TXNnKCfjgrfjg4rjg6rjgqrnt6jpm4YnLCAn44K344OK44Oq44Kq44KS6YG45oqe44GX44Gm44GP44Gg44GV44GE44CCJyk7XHJcbiAgICAgICAgJCgnLmRlbGV0ZS1zY2VuYXJpby1hbGwnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICQoJy5lZGl0LXNjZW5hcmlvLWJ1dHRvbicpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgc2V0TG9hZChmYWxzZSlcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBMb2FkIG1vZGFsIGRldGFpbCBzY2VuYXJpb1xyXG4gKi9cclxuZnVuY3Rpb24gc2NlbmFyaW9EZXRhaWwoKSB7XHJcbiAgICBzZXRMb2FkKHRydWUpXHJcbiAgICAkKCcuZWRpdC1zY2VuYXJpby1idXR0b24nKS5jc3MoJ2Rpc3BsYXknLCAnaW5saW5lJyk7XHJcbiAgICBsZXQgdGFyZ2V0ID0gJCgnLmRyYXdmbG93JykuZmluZCgnLmVkaXRvci1zY2VuYXJpby5zZWxlY3RlZCcpLmF0dHIoJ2lkJyk7XHJcbiAgICBpZiAodGFyZ2V0ICYmIHRhcmdldC5pbmRleE9mKCdub2RlLXMnKSAhPSAtMSkge1xyXG4gICAgICAgIGxldCBpZFNjZW5hcmlvID0gdGFyZ2V0O1xyXG4gICAgICAgIGxldCBkYXRhID0gJCgnIycgKyBpZFNjZW5hcmlvKVswXS5nZXRBdHRyaWJ1dGUoJ2RhdGEnKTtcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IGRldGFpbFNjZW5hcmlvLFxyXG4gICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgICAgICAgICAgX3Rva2VuOiBjc3JmX3Rva2VuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICQoJyNkZXRhaWxTZW5hcmlvUUEnKS5tb2RhbChzZXR0aW5nX21vZGFsKTtcclxuICAgICAgICAgICAgJCgnI2RldGFpbFNlbmFyaW9RQScpLmh0bWwocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAkKCcuZmEtY2lyY2xlLW8tbm90Y2gnKS5yZW1vdmUoKTtcclxuICAgICAgICB9KS5mYWlsKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCcjZGV0YWlsU2VuYXJpb1FBJykubW9kYWwoc2V0dGluZ19tb2RhbCk7XHJcbiAgICAgICAgICAgIHNob3dNc2coJ+OCt+ODiuODquOCqiDmg4XloLEnLCAn5ZWP6aGM44GM55m655Sf44GX44G+44GX44Gf44CC44K344OK44Oq44Kq5oOF5aCx5Y+W5b6X44Gn44GN44G+44Gb44KT44CCJyk7XHJcbiAgICAgICAgICAgICQoJy5kZWxldGUtc2NlbmFyaW8tYWxsJykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgICAgICB9KS5hbHdheXMoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBzZXRMb2FkKGZhbHNlKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAkKCcjZGV0YWlsU2VuYXJpb1FBJykubW9kYWwoc2V0dGluZ19tb2RhbCk7XHJcbiAgICAgICAgc2hvd01zZygn44K344OK44Oq44KqIOaDheWgsScsICfjgrfjg4rjg6rjgqrjgpLpgbjmip7jgZfjgabjgY/jgaDjgZXjgYTjgIInKTtcclxuICAgICAgICAkKCcuZGVsZXRlLXNjZW5hcmlvLWFsbCcpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgJCgnLmVkaXQtc2NlbmFyaW8tYnV0dG9uJykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgICAgICBzZXRMb2FkKGZhbHNlKVxyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogTG9hZCBtb2RhbCBxYSBsZWFybmluZ1xyXG4gKi9cclxuZnVuY3Rpb24gcWFEZXRhaWwoKSB7XHJcbiAgICBzZXRMb2FkKHRydWUpXHJcbiAgICAkKCcuZWRpdC1zY2VuYXJpby1idXR0b24nKS5jc3MoJ2Rpc3BsYXknLCAnaW5saW5lJyk7XHJcbiAgICBsZXQgdGFyZ2V0ID0gJCgnLmRyYXdmbG93JykuZmluZCgnLmVkaXRvci1xYS5zZWxlY3RlZCcpLmF0dHIoJ2lkJyk7XHJcbiAgICBpZiAodGFyZ2V0ICYmIHRhcmdldC5pbmRleE9mKCdub2RlLXEnKSAhPSAtMSkge1xyXG4gICAgICAgIGxldCBpZFFBID0gdGFyZ2V0O1xyXG4gICAgICAgIGxldCBkYXRhID0gJCgnIycgKyBpZFFBKVswXS5nZXRBdHRyaWJ1dGUoJ2RhdGEnKTtcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IGRldGFpbFFBLFxyXG4gICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgICAgICAgICAgX3Rva2VuOiBjc3JmX3Rva2VuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICQoJyNkZXRhaWxTZW5hcmlvUUEnKS5tb2RhbChzZXR0aW5nX21vZGFsKTtcclxuICAgICAgICAgICAgJCgnI2RldGFpbFNlbmFyaW9RQScpLmh0bWwocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAkKCcuZmEtY2lyY2xlLW8tbm90Y2gnKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgc2V0TG9hZChmYWxzZSlcclxuICAgICAgICB9KS5mYWlsKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCcjZGV0YWlsU2VuYXJpb1FBJykubW9kYWwoc2V0dGluZ19tb2RhbCk7XHJcbiAgICAgICAgICAgIHNob3dNc2coJ++8se+8oeODh+ODvOOCvycsICfllY/poYzjgYznmbrnlJ/jgZfjgb7jgZfjgZ/jgILvvLHvvKHmg4XloLHlj5blvpfjgafjgY3jgb7jgZvjgpPjgIInKTtcclxuICAgICAgICAgICAgJCgnLmRlbGV0ZS1zY2VuYXJpby1hbGwnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICAgICBzZXRMb2FkKGZhbHNlKVxyXG4gICAgICAgIH0pLmFsd2F5cyhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgICQoJyNkZXRhaWxTZW5hcmlvUUEnKS5tb2RhbChzZXR0aW5nX21vZGFsKTtcclxuICAgICAgICBzaG93TXNnKCfvvLHvvKHjg4fjg7zjgr8nLCAn77yx77yh44KS6YG45oqe44GX44Gm44GP44Gg44GV44GE44CCJyk7XHJcbiAgICAgICAgJCgnLmRlbGV0ZS1zY2VuYXJpby1hbGwnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICQoJy5lZGl0LXNjZW5hcmlvLWJ1dHRvbicpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgc2V0TG9hZChmYWxzZSlcclxuICAgIH1cclxufVxyXG5cclxuLy8gU2V0IGxvY2F0aW9uIHNjZW5hcmlvXHJcbi8vIEBwYXJhbXMgcmVzdWx0IGFycmF5KG9iailcclxuLy8gQHBhcmFtcyBwb3NpdGlvbiBhcnJheShvYmopXHJcbmZ1bmN0aW9uIHNldExvY2F0aW9uKHJlc3VsdCwgcG9zaXRpb24pIHtcclxuICAgIE9iamVjdC5rZXlzKHJlc3VsdCkubWFwKGZ1bmN0aW9uKHZhbCwgaW5kZXgpIHtcclxuICAgICAgICByZXN1bHRbdmFsXS5wb3NfeCA9IHBvc2l0aW9uW3ZhbF0ueDtcclxuICAgICAgICByZXN1bHRbdmFsXS5wb3NfeSA9IHBvc2l0aW9uW3ZhbF0ueTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBFZGl0Tm9kZUVsZW1lbnQoKSB7XHJcbiAgICAvL3ZhbGlkYXRlXHJcbiAgICB2YXIgbmFtZV9zY2VuYXJpbyA9ICQoJ2Zvcm0jZW50cnlfZm9ybV9lZGl0JykuZmluZCgnaW5wdXRbbmFtZT1cIm5hbWVcIl0nKS52YWwoKS50cmltKCksXHJcbiAgICBvcmRlciA9ICQoJ2Zvcm0jZW50cnlfZm9ybV9lZGl0JykuZmluZCgnaW5wdXRbbmFtZT1cIm9yZGVyXCJdJykudmFsKCksXHJcbiAgICBrZXl3b3JkX3NlbGVjdCA9ICQoJyNjbG9uZV9hcmVhX2VkaXQnKS5maW5kKCdzZWxlY3RbbmFtZV49bXVsdGlfZGF0YV0nKSxcclxuICAgIHR5cGUgPSAnZWRpdCc7XHJcbiAgICBpZiAoIXZhbGlkYXRlUGFyYW1zKG5hbWVfc2NlbmFyaW8sIG9yZGVyLCBrZXl3b3JkX3NlbGVjdCwgdHlwZSkpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICB2YXIgaW5wdXQgPSAkKFwiPGlucHV0PlwiKS5hdHRyKFwidHlwZVwiLCBcImhpZGRlblwiKS5hdHRyKFwibmFtZVwiLCBcImNhdGVnb3J5X2lkXCIpLnZhbCgkKCcuc2NlbmFyaW9DYXRlZ29yeScpLnZhbCgpKTtcclxuICAgICQoJyNlbnRyeV9mb3JtX2VkaXQnKS5hcHBlbmQoaW5wdXQpO1xyXG4gICAgaWYgKG9yZGVyKSB7XHJcbiAgICAgICAgb3JkZXIgPSBwYXJzZUludChvcmRlcik7XHJcbiAgICAgICAgJCgnZm9ybSNlbnRyeV9mb3JtX2VkaXQnKS5maW5kKCdpbnB1dFtuYW1lPVwib3JkZXJcIl0nKS52YWwob3JkZXIpO1xyXG4gICAgfVxyXG4gICAgdmFyIGZvcm1fZGF0YSA9ICQoJ2Zvcm0jZW50cnlfZm9ybV9lZGl0Jykuc2VyaWFsaXplKCk7XHJcbiAgICBsZXQgaWQgPSAkKCcuZHJhd2Zsb3cnKS5maW5kKCcuZWRpdG9yLXNjZW5hcmlvLnNlbGVjdGVkJykuYXR0cignaWQnKTtcclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdXJsOiB1cmxTZW5hcmlvLFxyXG4gICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIGRhdGE6IGZvcm1fZGF0YSxcclxuICAgICAgICAgICAgX3Rva2VuOiBjc3JmX3Rva2VuXHJcbiAgICAgICAgfVxyXG4gICAgfSkuZG9uZShmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAgICQoJyNzY2VuYXJpb0VkaXQnKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgICAgIHZhciB0aXRsZSA9IHJlc3BvbnNlLm5hbWU7XHJcbiAgICAgICAgdGl0bGUgPSBjb252ZXJ0TG9uZ1N0cmluZyh0aXRsZSk7XHJcbiAgICAgICAgbGV0IGRhdGEgPSBlZGl0b3IuZHJhd2Zsb3cuZHJhd2Zsb3cuSG9tZS5kYXRhO1xyXG4gICAgICAgIGRhdGFbaWQucmVwbGFjZSgnbm9kZS0nLCAnJyldLmRhdGEgPSByZXNwb25zZTtcclxuICAgICAgICBkYXRhW2lkLnJlcGxhY2UoJ25vZGUtJywgJycpXS5uYW1lID0gcmVzcG9uc2UubmFtZTtcclxuICAgICAgICBkYXRhW2lkLnJlcGxhY2UoJ25vZGUtJywgJycpXS5odG1sID0gJzxkaXY+PGRpdiBjbGFzcz1cInRpdGxlLWJveDEgZWRpdG9yLXNjZW5hcmlvXCIgdGl0bGU9XCInICsgcmVzcG9uc2UubmFtZSArICdcIj4nICsgdGl0bGUgKyAnPC9kaXY+PC9kaXY+JztcclxuICAgICAgICBlZGl0b3IuY2xlYXIoKTtcclxuICAgICAgICBlZGl0b3IuZHJhd2Zsb3cuZHJhd2Zsb3cuSG9tZS5kYXRhID0gZGF0YTtcclxuICAgICAgICBlZGl0b3IuYWRkSGlzdG9yeSgpO1xyXG4gICAgICAgIGVkaXRvci5sb2FkKCk7XHJcbiAgICAgICAgdmFyIGVsZW0gPSAkKCcjJyArICdub2RlLXMnICsgcmVzcG9uc2UuaWQucmVwbGFjZSgncycsICcnKSk7XHJcbiAgICAgICAgZWRpdG9yLmZvY3VzRGF0YShlbGVtLCBmYWxzZSwgJ3MnICsgcmVzcG9uc2UuaWQucmVwbGFjZSgncycsICcnKSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2V0RGF0YVNob3dTY2VuYXJpbyhyZXNwb25zZSwgcmVzdWx0KSB7XHJcbiAgICB2YXIgcmVzdWx0ID0ge307XHJcbiAgICBlZGl0b3IuZHJhd2Zsb3cgPSB7XHJcbiAgICAgICAgXCJkcmF3Zmxvd1wiOiB7XHJcbiAgICAgICAgICAgIFwiSG9tZVwiOiB7XHJcbiAgICAgICAgICAgICAgICBcImRhdGFcIjogcmVzdWx0XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoZGF0YVNjZW5hcmlvLmxlbmd0aCA+IDApIHtcclxuICAgICAgICByZXNwb25zZS5zY2VuYXJpby5tYXAoZnVuY3Rpb24odmFsLCBpbmRleCkge1xyXG4gICAgICAgICAgICBsZXQgbXVsdGlfZGF0YSA9IHt9O1xyXG4gICAgICAgICAgICBpZiAodmFsLmtleXdvcmRfZ3JvdXBubyAmJiB2YWwua2V5d29yZF9pZCAmJiB2YWwua2V5d29yZCkge1xyXG4gICAgICAgICAgICAgICAgbXVsdGlfZGF0YSA9IHNldE11bHRpcGxlS2V5d29yZCh2YWwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhtdWx0aV9kYXRhKS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICB2YWxbJ211bHRpX2RhdGEnXSA9IG11bHRpX2RhdGE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHRpdGxlID0gdmFsLm5hbWU7XHJcbiAgICAgICAgICAgIHRpdGxlID0gY29udmVydExvbmdTdHJpbmcodGl0bGUpO1xyXG4gICAgICAgICAgICB2YXIgY29ubmVjdGlvbnNfb3V0ID0gW107XHJcbiAgICAgICAgICAgIHZhciBjb25uZWN0aW9uc19pbnQgPSBbXTtcclxuICAgICAgICAgICAgaWYgKHZhbC5wYXJlbnRfc2NlbmFyaW9faWQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFyckNvbm5lY3QgPSB2YWwucGFyZW50X3NjZW5hcmlvX2lkLnNwbGl0KFwiLFwiKTtcclxuICAgICAgICAgICAgICAgIGFyckNvbm5lY3QubWFwKGZ1bmN0aW9uKGl0ZW0sIGkpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25uZWN0aW9uc19pbnQucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibm9kZVwiOiBcInNcIiArIGl0ZW0udHJpbSgpICsgXCJcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJpbnB1dFwiOiBcIm91dHB1dF8xXCJcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh2YWwubGVhcm5pbmdfaWQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgY29ubmVjdGlvbnNfb3V0LnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgIFwibm9kZVwiOiBcInFcIiArIHZhbC5sZWFybmluZ19pZCArIFwiXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJpbnB1dFwiOiBcIm91dHB1dF8xXCJcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJlc3VsdFtcInNcIiArIHZhbC5zY2VuYXJpb19pZF0gPSB7XHJcbiAgICAgICAgICAgICAgICBcImlkXCI6IFwic1wiICsgdmFsLnNjZW5hcmlvX2lkLFxyXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IHZhbC5uYW1lLFxyXG4gICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBcImVkaXRvci1zY2VuYXJpb1wiLFxyXG4gICAgICAgICAgICAgICAgXCJkYXRhXCI6IHZhbCxcclxuICAgICAgICAgICAgICAgIFwidHlwZW5vZGVcIjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBcImh0bWxcIjogXCJcXG48ZGl2PlxcbjxkaXYgY2xhc3M9XFxcInRpdGxlLWJveDEgZWRpdG9yLXNjZW5hcmlvXFxcIiB0aXRsZT1cXFwiXCIgKyB2YWwubmFtZSArIFwiXFxcIj5cIiArIHRpdGxlICsgXCI8L2Rpdj5cXG5cIixcclxuICAgICAgICAgICAgICAgIFwiaW5wdXRzXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICBcImlucHV0XzFcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImNvbm5lY3Rpb25zXCI6IGNvbm5lY3Rpb25zX2ludFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBcIm91dHB1dHNcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgIFwib3V0cHV0XzFcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImNvbm5lY3Rpb25zXCI6IGNvbm5lY3Rpb25zX291dFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgXCJwb3NfeFwiOiAzMCxcclxuICAgICAgICAgICAgICAgIFwicG9zX3lcIjogNzAgKiBpbmRleCxcclxuICAgICAgICAgICAgICAgIFwiY291bnRfY2hpbGRyXCI6IFtdXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGlmIChkYXRhUWEubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIHJlc3BvbnNlLmFuc3dlci5tYXAoZnVuY3Rpb24odmFsLCBpbmRleCkge1xyXG4gICAgICAgICAgICBpZiAodmFsLnNjZW5hcmlvX2lkKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdGl0bGUgPSB2YWwucXVlc3Rpb247XHJcbiAgICAgICAgICAgICAgICB0aXRsZSA9IGNvbnZlcnRMb25nU3RyaW5nKHRpdGxlKTtcclxuICAgICAgICAgICAgICAgIHZhciBjb25uZWN0aW9uc19pbnQgPSBbXTtcclxuICAgICAgICAgICAgICAgIGlmICh2YWwuc2NlbmFyaW9faWQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhcnJDb25uZWN0ID0gdmFsLnNjZW5hcmlvX2lkLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVuaXF1ZV9hcnJfY29ubmVjdCA9IGFyckNvbm5lY3QuZmlsdGVyKCh4LCBpLCBhKSA9PiBhLmluZGV4T2YoeCkgPT0gaSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdW5pcXVlX2Fycl9jb25uZWN0Lm1hcChmdW5jdGlvbihpdGVtLCBpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbm5lY3Rpb25zX2ludC5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibm9kZVwiOiBcInNcIiArIGl0ZW0udHJpbSgpICsgXCJcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW5wdXRcIjogXCJvdXRwdXRfMVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHZhbC5rZXlfcGhyYXNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYXJyYXlfa2V5X3BocmFzZSA9IHZhbC5rZXlfcGhyYXNlLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVuaXF1ZV9hcnJheV9rZXlfcGhyYXNlID0gYXJyYXlfa2V5X3BocmFzZS5maWx0ZXIoKHgsIGksIGEpID0+IGEuaW5kZXhPZih4KSA9PSBpKTtcclxuICAgICAgICAgICAgICAgICAgICB2YWwua2V5X3BocmFzZSA9IHVuaXF1ZV9hcnJheV9rZXlfcGhyYXNlLmpvaW4oJywnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICh2YWwuYW5zd2VyX2lkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0W1wicVwiICsgdmFsLmFuc3dlcl9pZF0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogXCJxXCIgKyB2YWwuYW5zd2VyX2lkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogdmFsLnF1ZXN0aW9uLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IFwiZWRpdG9yLXFhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGF0YVwiOiB2YWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidHlwZW5vZGVcIjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaHRtbFwiOiBcIlxcbjxkaXY+XFxuPGRpdiBjbGFzcz1cXFwidGl0bGUtYm94IGVkaXRvci1xYS1pZFxcXCIgdGl0bGU9XFxcIlwiICsgdmFsLmFwaV9pZCArIFwiXFxcIj5RQSBJRDogXCIgKyB2YWwuYXBpX2lkICsgXCI8L2Rpdj5cXG5cXG48ZGl2IGNsYXNzPVxcXCJ0aXRsZS1ib3ggZWRpdG9yLXFhXFxcIiB0aXRsZT1cXFwiXCIgKyB2YWwucXVlc3Rpb24gKyBcIlxcXCI+XCIgKyB0aXRsZSArIFwiPC9kaXY+XFxuPC9kaXY+XFxuXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaW5wdXRzXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW5wdXRfMVwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjb25uZWN0aW9uc1wiOiBjb25uZWN0aW9uc19pbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJvdXRwdXRzXCI6IHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicG9zX3hcIjogNjAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcInBvc195XCI6IDEwMCAqIGluZGV4LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImNvdW50X2NoaWxkclwiOiBbXVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgaWYgKE9iamVjdC5rZXlzKHJlc3BvbnNlLmFuc3dlckNvcHkpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBPYmplY3Qua2V5cyhyZXNwb25zZS5hbnN3ZXJDb3B5KS5tYXAoZnVuY3Rpb24odmFsLCBpbmRleCkge1xyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2UuYW5zd2VyQ29weVt2YWxdLnNjZW5hcmlvX2lkKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdGl0bGUgPSByZXNwb25zZS5hbnN3ZXJDb3B5W3ZhbF0ucXVlc3Rpb247XHJcbiAgICAgICAgICAgICAgICB0aXRsZSA9IGNvbnZlcnRMb25nU3RyaW5nKHRpdGxlKTtcclxuICAgICAgICAgICAgICAgIHZhciBjb25uZWN0aW9uc19pbnQgPSBbXTtcclxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5hbnN3ZXJDb3B5W3ZhbF0uc2NlbmFyaW9faWQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhcnJDb25uZWN0ID0gcmVzcG9uc2UuYW5zd2VyQ29weVt2YWxdLnNjZW5hcmlvX2lkLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVuaXF1ZV9hcnJfY29ubmVjdCA9IGFyckNvbm5lY3QuZmlsdGVyKCh4LCBpLCBhKSA9PiBhLmluZGV4T2YoeCkgPT0gaSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdW5pcXVlX2Fycl9jb25uZWN0Lm1hcChmdW5jdGlvbihpdGVtLCBpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbm5lY3Rpb25zX2ludC5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibm9kZVwiOiBcInNcIiArIGl0ZW0udHJpbSgpICsgXCJcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW5wdXRcIjogXCJvdXRwdXRfMVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmFuc3dlckNvcHlbdmFsXS5rZXlfcGhyYXNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYXJyYXlfa2V5X3BocmFzZSA9IHJlc3BvbnNlLmFuc3dlckNvcHlbdmFsXS5rZXlfcGhyYXNlLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVuaXF1ZV9hcnJheV9rZXlfcGhyYXNlID0gYXJyYXlfa2V5X3BocmFzZS5maWx0ZXIoKHgsIGksIGEpID0+IGEuaW5kZXhPZih4KSA9PSBpKTtcclxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5hbnN3ZXJDb3B5W3ZhbF0ua2V5X3BocmFzZSA9IHVuaXF1ZV9hcnJheV9rZXlfcGhyYXNlLmpvaW4oJywnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5hbnN3ZXJDb3B5W3ZhbF0ubm9kZV9pZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdFt2YWxdID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IHZhbCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IHJlc3BvbnNlLmFuc3dlckNvcHlbdmFsXS5xdWVzdGlvbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBcImVkaXRvci1xYVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRhdGFcIjogcmVzcG9uc2UuYW5zd2VyQ29weVt2YWxdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcInR5cGVub2RlXCI6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImh0bWxcIjogXCJcXG48ZGl2PlxcbjxkaXYgY2xhc3M9XFxcInRpdGxlLWJveCBlZGl0b3ItcWEtaWRcXFwiIHRpdGxlPVxcXCJcIiArIHJlc3BvbnNlLmFuc3dlckNvcHlbdmFsXS5hcGlfaWQgKyBcIlxcXCI+UUEgSUQ6IFwiICsgcmVzcG9uc2UuYW5zd2VyQ29weVt2YWxdLmFwaV9pZCArIFwiPC9kaXY+XFxuXFxuPGRpdiBjbGFzcz1cXFwidGl0bGUtYm94IGVkaXRvci1xYVxcXCIgdGl0bGU9XFxcIlwiICsgcmVzcG9uc2UuYW5zd2VyQ29weVt2YWxdLnF1ZXN0aW9uICsgXCJcXFwiPlwiICsgdGl0bGUgKyBcIjwvZGl2PlxcbjwvZGl2PlxcblwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImlucHV0c1wiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlucHV0XzFcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY29ubmVjdGlvbnNcIjogY29ubmVjdGlvbnNfaW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwib3V0cHV0c1wiOiB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcInBvc194XCI6IDYwMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwb3NfeVwiOiAxMDAgKiBpbmRleCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJjb3VudF9jaGlsZHJcIjogW11cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG59XHJcblxyXG4vKipcclxuICogU2V0IGFuZCBzb3J0IGtleXdvcmQgYnkgb3JkZXIgJiBncm91cF9ub1xyXG4gKiBAcGFyYW0gdmFsXHJcbiAqL1xyXG5mdW5jdGlvbiBzZXRNdWx0aXBsZUtleXdvcmQodmFsKSB7XHJcbiAgICB2YXIgbGlzdF9pdGVtID0ge307XHJcbiAgICB2YXIgYXJyX2tleXdvcmQgPSB2YWwua2V5d29yZC5zcGxpdCgnLCcpO1xyXG4gICAgdmFyIGFycl9rZXl3b3JkX29yZGVyID0gdmFsLmtleXdvcmRfb3JkZXIuc3BsaXQoJywnKTtcclxuICAgIHZhbC5rZXl3b3JkX2dyb3Vwbm8udG9TdHJpbmcoKS5zcGxpdCgnLCcpLm1hcChmdW5jdGlvbihpdGVtLCBpKSB7XHJcbiAgICAgICAgdmFyIG9iaiA9IHtcclxuICAgICAgICAgICAgb3JkZXI6IGFycl9rZXl3b3JkX29yZGVyW2ldLFxyXG4gICAgICAgICAgICBrZXl3b3JkOiBhcnJfa2V5d29yZFtpXVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobGlzdF9pdGVtW2l0ZW1dICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgbGlzdF9pdGVtW2l0ZW1dLnB1c2gob2JqKVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxpc3RfaXRlbVtpdGVtXSA9IFtvYmpdXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3Qua2V5cyhsaXN0X2l0ZW0pLm1hcChmdW5jdGlvbihkYXRhLCBpKSB7XHJcbiAgICAgICAgdmFyIGFycl9kYXRhX3NvcnQgPSBsaXN0X2l0ZW1bZGF0YV0uc29ydCgoYSwgYikgPT4gKGEub3JkZXIgPiBiLm9yZGVyKSA/IDEgOiAtMSk7XHJcbiAgICAgICAgdmFyIGFycl92YWx1ZV9rZXl3b3JkID0gW107XHJcbiAgICAgICAgT2JqZWN0LmtleXMoYXJyX2RhdGFfc29ydCkubWFwKGZ1bmN0aW9uKGtleSkge1xyXG4gICAgICAgICAgICBpZiAoYXJyX3ZhbHVlX2tleXdvcmQuaW5kZXhPZihhcnJfZGF0YV9zb3J0W2tleV0ua2V5d29yZCkgPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIGFycl92YWx1ZV9rZXl3b3JkLnB1c2goYXJyX2RhdGFfc29ydFtrZXldLmtleXdvcmQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICBsaXN0X2l0ZW1bZGF0YV0gPWFycl92YWx1ZV9rZXl3b3JkO1xyXG4gICAgfSlcclxuICAgIHJldHVybiBsaXN0X2l0ZW07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNvcHlOb2RlRWxlbWVudChpZCkge1xyXG4gICAgaWYgKCFpZCkge1xyXG4gICAgICAgIGxldCB0YXJnZXQgPSAkKCcuZHJhd2Zsb3cnKS5maW5kKCcuc2VsZWN0ZWQnKS5hdHRyKCdpZCcpO1xyXG4gICAgICAgIGlmICghdGFyZ2V0KSB7XHJcbiAgICAgICAgICAgICQoJyNzY2VuYXJpb0VkaXQnKS5tb2RhbChzZXR0aW5nX21vZGFsKTtcclxuICAgICAgICAgICAgc2hvd01zZygn44K344OK44Oq44Kq6KSH6KO9Jywn5a++6LGh44Gu44OO44O844OJ44KS6YG45oqe44GX44Gm44GP44Gg44GV44GE44CCJyk7XHJcbiAgICAgICAgICAgICQoJy5kZWxldGUtc2NlbmFyaW8tYWxsJykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBwYXN0RWxlbUNvcHkodGFyZ2V0LnN1YnN0cig1KSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBwYXN0RWxlbUNvcHkoaWQsIHRydWUpO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlbGV0ZU5vZGVFbGVtZW50KCkge1xyXG4gICAgJCgnLmVkaXQtc2NlbmFyaW8tYnV0dG9uJykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgIGxldCBpZCA9ICQoJy5kcmF3ZmxvdycpLmZpbmQoJy5zZWxlY3RlZCcpLmF0dHIoJ2lkJyk7XHJcbiAgICBpZiAoIWlkKSB7XHJcbiAgICAgICAgJCgnI3NjZW5hcmlvRWRpdCcpLm1vZGFsKHNldHRpbmdfbW9kYWwpO1xyXG4gICAgICAgIHNob3dNc2coJ+OCt+ODiuODquOCquWJiumZpCcsJ+WvvuixoeOBruODjuODvOODieOCkumBuOaKnuOBl+OBpuOBj+OBoOOBleOBhOOAgicpO1xyXG4gICAgICAgICQoJy5kZWxldGUtc2NlbmFyaW8tYWxsJykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdmFyIGlkcyA9IGlkO1xyXG4gICAgICAgIHZhciBldmVudFNjZW5hcmlvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xyXG4gICAgICAgIGlkcyAmJiBlZGl0b3IucmVtb3ZlTm9kZUlkKGlkcyksXHJcbiAgICAgICAgICAgIGVkaXRvci5jb25uZWN0aW9uX3NlbGVjdGVkICYmIGVkaXRvci5yZW1vdmVDb25uZWN0aW9uKCksXHJcbiAgICAgICAgICAgIG51bGwgIT0gaWRzICYmIChldmVudFNjZW5hcmlvLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKSwgKGV2ZW50U2NlbmFyaW8gPSBudWxsKSksXHJcbiAgICAgICAgICAgIG51bGwgIT0gZWRpdG9yLmNvbm5lY3Rpb25fc2VsZWN0ZWQgJiYgKGVkaXRvci5jb25uZWN0aW9uX3NlbGVjdGVkLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKSwgZWRpdG9yLnJlbW92ZVJlb3V0ZUNvbm5lY3Rpb25TZWxlY3RlZCgpLCAoZWRpdG9yLmNvbm5lY3Rpb25fc2VsZWN0ZWQgPSBudWxsKSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlbGV0ZUFsbE5vZGVFbGVtZW50KGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICQoIFwiLmRlbGV0ZS1zY2VuYXJpby1hbGxcIiApLnVuYmluZCgpO1xyXG4gICAgJCgnI3NjZW5hcmlvRWRpdCcpLm1vZGFsKHNldHRpbmdfbW9kYWwpO1xyXG4gICAgc2hvd01zZygn44K344OK44Oq44Kq5YmK6ZmkJywn44GZ44G544Gm44Gu44OO44O844OJ44KS5YmK6Zmk44GX44G+44GZ44CCPC9icj4g5YmK6Zmk44GX44Gm44KI44KN44GX44GE44Gn44GZ44GL44CCJyk7XHJcbiAgICAkKCcuZWRpdC1zY2VuYXJpby1idXR0b24nKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgaWYgKCQoJyNzY2VuYXJpb0VkaXQgLm1vZGFsLWZvb3RlcicpLmZpbmQoJy5lZGl0LXNjZW5hcmlvLWJ1dHRvbicpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICB2YXIgYnRuID0gJCgnI3NjZW5hcmlvRWRpdCAubW9kYWwtZm9vdGVyJykuZmluZCgnLmVkaXQtc2NlbmFyaW8tYnV0dG9uJylbMF07XHJcbiAgICAgICAgJChidG4pLmF0dHIoJ2NsYXNzJywgJ2J0biBidG4tZGFuZ2VyIGRlbGV0ZS1zY2VuYXJpby1hbGwnKTtcclxuICAgICAgICAkKGJ0bikudGV4dCgn5YmK6ZmkJyk7XHJcbiAgICB9XHJcbiAgICAkKCcjc2NlbmFyaW9FZGl0IC5kZWxldGUtc2NlbmFyaW8tYWxsJykuY3NzKCdkaXNwbGF5JywgJ2lubGluZScpO1xyXG4gICAgdmFyIGFycl9pZCA9IG5ldyBBcnJheSgpO1xyXG4gICAgJCgnLmRyYXdmbG93JykuY2hpbGRyZW4oKS5tYXAoZnVuY3Rpb24oaSwgdmFsKSB7XHJcbiAgICAgICAgaWYgKHZhbCAmJiB2YWwuY2hpbGROb2Rlcy5sZW5ndGggPiAwICYmIHZhbC5jaGlsZE5vZGVzWzBdLnRhZ05hbWUgPT0gJ0RJVicpIHtcclxuICAgICAgICAgICAgYXJyX2lkLnB1c2godmFsLmNoaWxkTm9kZXNbMF0uZ2V0QXR0cmlidXRlKCdpZCcpLnJlcGxhY2UoJ25vZGUtJywgJycpKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgICQoJy5kZWxldGUtc2NlbmFyaW8tYWxsJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgc2V0TG9hZCh0cnVlKVxyXG4gICAgICAgICQoJy5zdGF0dXMtc2NlbmFyaW8nKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpO1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgJ1gtQ1NSRi1UT0tFTic6ICQoJ21ldGFbbmFtZT1cImNzcmYtdG9rZW5cIl0nKS5hdHRyKCdjb250ZW50JylcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdGltZW91dDogMCxcclxuICAgICAgICAgICAgdXJsOiB1cmxTY2VuYXJpb0RlbGV0ZSxcclxuICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgaWQ6IGFycl9pZCxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdkZWxldGVBbGwnLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkuZG9uZShmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgICAgIGlmIChhcnJfaWQubGVuZ3RoID4gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbG9hZFNjZW5hcmlvKCQoJy5maWxsdGVyQ2F0ZWdvcnknKS52YWwoKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjc2NlbmFyaW9FZGl0JykubW9kYWwoJ2hpZGUnKTtcclxuICAgICAgICAgICAgICAgIGFsZXJ0KCfjg47jg7zjg4njga7liYrpmaTjgavlpLHmlZfjgZfjgb7jgZfjgZ8nKTtcclxuICAgICAgICAgICAgICAgIHNldExvYWQoZmFsc2UpXHJcbiAgICAgICAgICAgICAgICAkKCcuZGVsZXRlLXNjZW5hcmlvLWFsbCcpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJCgnLnNlYXJjaC1zY2VuYXJpbycpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgICQoJy5zZWFyY2gtUUEnKS52YWwoJycpO1xyXG4gICAgICAgIH0pLmZhaWwoZnVuY3Rpb24oanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7XHJcbiAgICAgICAgICAgIGFsZXJ0KCfjg47jg7zjg4njga7liYrpmaTjgavlpLHmlZfjgZfjgb7jgZfjgZ8nKTtcclxuICAgICAgICB9KS5hbHdheXMoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcjc2NlbmFyaW9FZGl0JykubW9kYWwoJ2hpZGUnKTtcclxuICAgICAgICAgICAgJCgnLmRlbGV0ZS1zY2VuYXJpby1hbGwnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICAgICBzZXRMb2FkKGZhbHNlKVxyXG4gICAgICAgICAgICAkKCcuc3RhdHVzLXNjZW5hcmlvJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2F2ZVNjZW5hcmlvRWRpdG9yKCkge1xyXG4gICAgc2V0TG9hZCh0cnVlKVxyXG4gICAgJCgnLnN0YXR1cy1zY2VuYXJpbycpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgICB2YXIgYXJyX2lkX3NjZW5hcmlvID0gJycsXHJcbiAgICAgICAgYXJyX3JlbGF0ZV9zY2VuYXJpbyA9ICcnLFxyXG4gICAgICAgIGFycl9xYV9zdHIgPSAnJyxcclxuICAgICAgICBzY2VuYXJpb19pZF9zZWxlY3RvciA9ICQoJy5kcmF3Zmxvdy1ub2RlJykuaGFzKCcuZWRpdG9yLXNjZW5hcmlvJyk7XHJcbiAgICBjb25uZWN0aW9uX3NlbGVjdG9yID0gJCgnLmNvbm5lY3Rpb24nKTtcclxuICAgIGFycl9xYSA9IG5ldyBBcnJheSgpLFxyXG4gICAgICAgIHVybCA9IHN0b3JlU2NlbmFyaW87XHJcblxyXG4gICAgc2NlbmFyaW9faWRfc2VsZWN0b3IubWFwKGZ1bmN0aW9uIChpLCB2YWwpIHtcclxuICAgICAgICBpZiAodmFsLmlkLmluZGV4T2YoJ25vZGUtcycpID4gLTEpIHtcclxuICAgICAgICAgICAgYXJyX2lkX3NjZW5hcmlvICs9IHZhbC5nZXRBdHRyaWJ1dGUoJ2RhdGEnKTtcclxuICAgICAgICAgICAgaWYgKGkgIT0gKHNjZW5hcmlvX2lkX3NlbGVjdG9yLmxlbmd0aCAtIDEpKSB7XHJcbiAgICAgICAgICAgICAgICBhcnJfaWRfc2NlbmFyaW8gKz0gJ0BAYWRkX2l0ZW1fbm9kZUBAJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGNvbm5lY3Rpb25fc2VsZWN0b3IubWFwKGZ1bmN0aW9uIChpLCB2YWwpIHtcclxuICAgICAgICBsZXQgY2xhc3NMaXN0ID0gJCh2YWwpLmF0dHIoJ2NsYXNzJykuc3BsaXQoJyAnKTtcclxuICAgICAgICBpZiAoY2xhc3NMaXN0WzFdICYmIGNsYXNzTGlzdFsyXSkge1xyXG4gICAgICAgICAgICBhcnJfcmVsYXRlX3NjZW5hcmlvICs9IGNsYXNzTGlzdFsyXS5zcGxpdChcIm5vZGVfb3V0X25vZGUtXCIpLmpvaW4oXCJcIikgKyAnLCcgKyBjbGFzc0xpc3RbMV0uc3BsaXQoXCJub2RlX2luX25vZGUtXCIpLmpvaW4oXCJcIik7XHJcbiAgICAgICAgICAgIGlmIChpICE9IChjb25uZWN0aW9uX3NlbGVjdG9yLmxlbmd0aCAtIDEpKSB7XHJcbiAgICAgICAgICAgICAgICBhcnJfcmVsYXRlX3NjZW5hcmlvICs9ICdAQGFkZF9pdGVtX3JlbGF0aW9uQEAnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgJCgnLmVkaXRvci1xYScpLm1hcChmdW5jdGlvbiBuYW1lKGksIHZhbCkge1xyXG4gICAgICAgIGlmICh2YWwuaWQuaW5kZXhPZignbm9kZS1xJykgPiAtMSkge1xyXG4gICAgICAgICAgICBsZXQgcG9zaXRpb24gPSAkKHZhbCkucG9zaXRpb24oKS50b3A7XHJcbiAgICAgICAgICAgIGFycl9xYS5wdXNoKHsgJ2lkJzogdmFsLmlkLnRvU3RyaW5nKCksICdwb3NpdGlvbic6IHBvc2l0aW9uIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGlmIChhcnJfcWEubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGFycl9xYS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBhLnBvc2l0aW9uIC0gYi5wb3NpdGlvbiB9KTtcclxuICAgICAgICAkLmVhY2goYXJyX3FhLCBmdW5jdGlvbiAoaW5kZXgsIHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGxldCB0ZW1wID0gaW5kZXggKyAxO1xyXG4gICAgICAgICAgICBhcnJfcWFbaW5kZXhdWydvcmRlciddID0gdGVtcDtcclxuICAgICAgICAgICAgYXJyX3FhX3N0ciArPSBKU09OLnN0cmluZ2lmeShhcnJfcWFbaW5kZXhdKTtcclxuICAgICAgICAgICAgaWYgKGluZGV4ICE9IGFycl9xYS5sZW5ndGggLSAxKSB7XHJcbiAgICAgICAgICAgICAgICBhcnJfcWFfc3RyICs9ICdAQGFkZF9pdGVtX3FhQEAnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAkLmFqYXgoe1xyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgJ1gtQ1NSRi1UT0tFTic6ICQoJ21ldGFbbmFtZT1cImNzcmYtdG9rZW5cIl0nKS5hdHRyKCdjb250ZW50JylcclxuICAgICAgICB9LFxyXG4gICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgIHRpbWVvdXQ6IDAsXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICBjYXRlZ29yeV9pZDogKCQoJy5maWxsdGVyQ2F0ZWdvcnknKS52YWwoKSkgPyAkKCcuZmlsbHRlckNhdGVnb3J5JykudmFsKCkgOiBudWxsLFxyXG4gICAgICAgICAgICBpZF9zY2VuYXJpbzogYXJyX2lkX3NjZW5hcmlvLFxyXG4gICAgICAgICAgICByZWxhdGVfc2NlbmFyaW86IGFycl9yZWxhdGVfc2NlbmFyaW8sXHJcbiAgICAgICAgICAgIGFycl9xYV9wb3NpdGlvbjogYXJyX3FhX3N0cixcclxuICAgICAgICB9XHJcbiAgICB9KS5kb25lKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgIGlmIChyZXNwb25zZSA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIHRlbXAgPSAwO1xyXG4gICAgICAgICAgICBlZGl0b3IuY2xlYXJIaXN0b3J5KCk7XHJcbiAgICAgICAgICAgICQoJy5zZWFyY2gtc2NlbmFyaW8nKS52YWwoJycpO1xyXG4gICAgICAgICAgICAkKCcuc2VhcmNoLVFBJykudmFsKCcnKTtcclxuICAgICAgICAgICAgaWYgKGFycl9pZF9zY2VuYXJpby5sZW5ndGggPCAyMDApIHtcclxuICAgICAgICAgICAgICAgIGxvYWRTY2VuYXJpbygkKCcuZmlsbHRlckNhdGVnb3J5JykudmFsKCkpO1xyXG4gICAgICAgICAgICAgICAgJCgnLnN0YXR1cy1zY2VuYXJpbycpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYWxlcnQoJ+ODh+ODvOOCv+OBruS/neWtmOOBq+WkseaVl+OBl+OBvuOBl+OBn+OAgicpO1xyXG4gICAgICAgICAgICBzZXRMb2FkKGZhbHNlKVxyXG4gICAgICAgICAgICAkKCcuc3RhdHVzLXNjZW5hcmlvJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSkuZmFpbChmdW5jdGlvbiAoanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7XHJcbiAgICAgICAgYWxlcnQoJ+ODh+ODvOOCv+OBruS/neWtmOOBq+WkseaVl+OBl+OBvuOBl+OBn+OAgicpO1xyXG4gICAgICAgIHNldExvYWQoZmFsc2UpXHJcbiAgICAgICAgJCgnLnN0YXR1cy1zY2VuYXJpbycpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbnZhciBjdHJsRG93biA9IGZhbHNlLFxyXG4gICAgY3RybEtleSA9IDE3LFxyXG4gICAgY21kS2V5ID0gOTEsXHJcbiAgICB2S2V5ID0gODYsXHJcbiAgICBjb3B5X2lkID0gMCxcclxuICAgIHVuZG9LZXkgPSA5MCxcclxuICAgIHJlZG9LZXkgPSA4OSxcclxuICAgIHNLZXkgPSA4MyxcclxuICAgIGNLZXkgPSA2NztcclxuJCgnI2RyYXdmbG93Jykua2V5ZG93bihmdW5jdGlvbihlKSB7XHJcbiAgICBpZiAoZS5rZXlDb2RlID09IGN0cmxLZXkgfHwgZS5rZXlDb2RlID09IGNtZEtleSkgY3RybERvd24gPSB0cnVlO1xyXG59KS5rZXl1cChmdW5jdGlvbihlKSB7XHJcbiAgICBpZiAoZS5rZXlDb2RlID09IGN0cmxLZXkgfHwgZS5rZXlDb2RlID09IGNtZEtleSkgY3RybERvd24gPSBmYWxzZTtcclxufSk7XHJcbi8vICcjZHJhd2Zsb3cnIEN0cmwgKyBDL1ZcclxudmFyIGlkX3RhcmdldCA9IG51bGw7XHJcbiQoJyNkcmF3ZmxvdycpLmtleWRvd24oZnVuY3Rpb24oZSkge1xyXG4gICAgbGV0IHRhcmdldCA9ICQoJy5kcmF3ZmxvdycpLmZpbmQoJy5zZWxlY3RlZCcpLmF0dHIoJ2lkJyk7XHJcbiAgICBpZiAoY3RybERvd24pIHtcclxuICAgICAgICBzd2l0Y2ggKGUua2V5Q29kZSkge1xyXG4gICAgICAgICAgICAgICAgLy8gQ3RybCArIENcclxuICAgICAgICAgICAgY2FzZSBjS2V5OlxyXG4gICAgICAgICAgICAgICAgaWYgKCF0YXJnZXQpIHJldHVybiAhMTtcclxuICAgICAgICAgICAgICAgIGlkX3RhcmdldCA9IHRhcmdldC50b1N0cmluZygpLnJlcGxhY2UoJ25vZGUtJywgJycpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAvLyBDdHJsICsgVlxyXG4gICAgICAgICAgICBjYXNlIHZLZXk6XHJcbiAgICAgICAgICAgICAgICBpZiAoaWRfdGFyZ2V0ID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBwYXN0RWxlbUNvcHkoaWRfdGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgLy8gQ3RybCArIFpcclxuICAgICAgICAgICAgY2FzZSB1bmRvS2V5OlxyXG4gICAgICAgICAgICAgICAgZWRpdG9yLnVuZG8oKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgLy8gQ3RybCArIFlcclxuICAgICAgICAgICAgY2FzZSByZWRvS2V5OlxyXG4gICAgICAgICAgICAgICAgZWRpdG9yLnJlZG8oKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgLy8gQ3RybCArIFlcclxuICAgICAgICAgICAgY2FzZSBzS2V5OlxyXG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgc2F2ZVNjZW5hcmlvRWRpdG9yKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSk7XHJcblxyXG5mdW5jdGlvbiBwYXN0RWxlbUNvcHkoaWQsIGNvcHlOb2RlUWEpIHtcclxuICAgIGxldCB0YXJnZXQgPSBlZGl0b3IuZHJhd2Zsb3cuZHJhd2Zsb3cuSG9tZS5kYXRhW2lkXTtcclxuICAgIGxldCBwb3NfeCA9IHRhcmdldC5wb3NfeCArIDEwO1xyXG4gICAgbGV0IHBvc195ID0gdGFyZ2V0LnBvc195ICsgMTA7XHJcbiAgICBpZiAoY29weU5vZGVRYSkge1xyXG4gICAgICAgIHBvc194ID0gJCgnI2RyYXdmbG93Jykuc2Nyb2xsTGVmdCgpICsgMTAwO1xyXG4gICAgICAgIHBvc195ID0gJCgnI2RyYXdmbG93Jykuc2Nyb2xsVG9wKCkgKyAxMDA7XHJcbiAgICB9XHJcbiAgICBpZiAoaWQuaW5kZXhPZigncycpID4gLTEpIHtcclxuICAgICAgICB2YXIgcmVzcG9uc2UgPSBKU09OLnBhcnNlKCQoJyNub2RlLScgKyBpZCkuYXR0cignZGF0YScpKTtcclxuICAgICAgICB2YXIgdGl0bGUgPSByZXNwb25zZS5uYW1lO1xyXG4gICAgICAgIHRpdGxlID0gY29udmVydExvbmdTdHJpbmcodGl0bGUpO1xyXG4gICAgICAgIHRlbXArKztcclxuICAgICAgICB2YXIgaWRTY2VuYXJpbyA9ICdzJyArIHRlbXAgKyAnLXRlbXAnO1xyXG4gICAgICAgIHJlc3BvbnNlLmlkID0gaWRTY2VuYXJpbztcclxuICAgICAgICB2YXIgc2NlbmFyaW8gPSAnPGRpdj48ZGl2IGNsYXNzPVwidGl0bGUtYm94MSBlZGl0b3Itc2NlbmFyaW9cIiB0aXRsZT1cIicgKyByZXNwb25zZS5uYW1lICsgJ1wiPicgKyB0aXRsZSArICc8L2Rpdj48L2Rpdj4nO1xyXG4gICAgICAgIGVkaXRvci5hZGROb2RlKHJlc3BvbnNlLm5hbWUsIDEsIDEsIHBvc194LCBwb3NfeSwgJ2VkaXRvci1zY2VuYXJpbycsIHt9LCBzY2VuYXJpbywgITEsIGlkU2NlbmFyaW8sIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7XHJcbiAgICAgICAgdmFyIGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm9kZS0nICsgaWRTY2VuYXJpbyk7XHJcbiAgICAgICAgdmFyIGh0bWwgPSAnPHAgY2xhc3M9XCInICsgaWRTY2VuYXJpbyArICdcIiBvbmNsaWNrPVwiZWRpdG9yLmZvY3VzRGF0YSh0aGlzKVwiPicgKyByZXNwb25zZS5uYW1lICsgJzwvcD4nO1xyXG4gICAgICAgICQoJy5jb250ZW50LXNjZW5hcmlvJykuYXBwZW5kKGh0bWwpO1xyXG4gICAgICAgIGVkaXRvci5mb2N1c0RhdGEoZWxlbSwgZmFsc2UsIGlkU2NlbmFyaW8pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChpZC5pbmRleE9mKCdxYycpID4gLTEpIHtcclxuICAgICAgICB2YXIgcmVzcG9uc2UgPSBKU09OLnBhcnNlKCQoJyNub2RlLScgKyBpZCkuYXR0cignZGF0YScpKTtcclxuICAgICAgICB2YXIgbmFtZVN1Ym1pdCA9ICQoJyNub2RlLScgKyBpZCkuY2hpbGRyZW4oKS5maW5kKCcuZWRpdG9yLXFhJykuYXR0cigndGl0bGUnKTtcclxuICAgICAgICB2YXIgdGl0bGUgPSBuYW1lU3VibWl0O1xyXG4gICAgICAgIHRpdGxlID0gY29udmVydExvbmdTdHJpbmcodGl0bGUpO1xyXG4gICAgICAgIHRlbXArKztcclxuICAgICAgICBpZiAoaWQuaW5kZXhPZignLXRlbXAtJykgPiAtMSkge1xyXG4gICAgICAgICAgICB2YXIgaWRRYUxlYXJuaW5nID0gaWQuc2xpY2UoMCwgaWQubGFzdEluZGV4T2YoXCItdGVtcFwiKSkgKyAnLXRlbXAtJyArIHRlbXA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdmFyIGlkUWFMZWFybmluZyA9IGlkICsgJy10ZW1wLScgKyB0ZW1wO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHFhID0gJzxkaXY+PGRpdiBjbGFzcz1cInRpdGxlLWJveCBlZGl0b3ItcWEtaWRcIiB0aXRsZT1cIicgKyAkKCcjbm9kZS0nICsgaWQpLmNoaWxkcmVuKCkuZmluZCgnLmVkaXRvci1xYS1pZCcpLmF0dHIoJ3RpdGxlJykgKyAnXCI+UUEgSUQ6JyArICQoJyNub2RlLScgKyBpZCkuY2hpbGRyZW4oKS5maW5kKCcuZWRpdG9yLXFhLWlkJykuYXR0cigndGl0bGUnKSArICc8L2Rpdj48ZGl2IGNsYXNzPVwidGl0bGUtYm94IGVkaXRvci1xYVwiIHRpdGxlPVwiJyArIG5hbWVTdWJtaXQgKyAnXCI+JyArIHRpdGxlICsgJzwvZGl2PjwvZGl2Pic7XHJcbiAgICAgICAgZWRpdG9yLmFkZE5vZGUobmFtZVN1Ym1pdCwgMSwgMCwgcG9zX3gsIHBvc195LCAnZWRpdG9yLXFhJywge30sIHFhLCAhMSwgaWRRYUxlYXJuaW5nLCBKU09OLnN0cmluZ2lmeShyZXNwb25zZSkpO1xyXG4gICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25vZGUtJyArIGlkUWFMZWFybmluZyk7XHJcbiAgICAgICAgdmFyIGh0bWwgPSAnPHAgY2xhc3M9XCInICsgaWRRYUxlYXJuaW5nICsgJ1wiIG9uY2xpY2s9XCJlZGl0b3IuZm9jdXNEYXRhKHRoaXMpXCI+JyArIHRpdGxlICsgJzwvcD4nO1xyXG4gICAgICAgICQoJy5jb250ZW50LXFhJykuYXBwZW5kKGh0bWwpO1xyXG4gICAgICAgIGVkaXRvci5mb2N1c0RhdGEoZWxlbSwgZmFsc2UsIGlkUWFMZWFybmluZyk7XHJcbiAgICB9IGVsc2UgaWYgKGlkLmluZGV4T2YoJ3EnKSA+IC0xKSB7XHJcbiAgICAgICAgdmFyIHJlc3BvbnNlID0gSlNPTi5wYXJzZSgkKCcjbm9kZS0nICsgaWQpLmF0dHIoJ2RhdGEnKSk7XHJcbiAgICAgICAgdmFyIG5hbWVTdWJtaXQgPSAkKCcjbm9kZS0nICsgaWQpLmNoaWxkcmVuKCkuZmluZCgnLmVkaXRvci1xYScpLmF0dHIoJ3RpdGxlJyk7XHJcbiAgICAgICAgdmFyIHRpdGxlID0gbmFtZVN1Ym1pdDtcclxuICAgICAgICB0aXRsZSA9IGNvbnZlcnRMb25nU3RyaW5nKHRpdGxlKTtcclxuICAgICAgICB0ZW1wKys7XHJcbiAgICAgICAgaWYgKGlkLmluZGV4T2YoJy10ZW1wLScpID4gLTEpIHtcclxuICAgICAgICAgICAgdmFyIGlkUWFMZWFybmluZyA9IGlkLnNsaWNlKDAsIGlkLmxhc3RJbmRleE9mKFwiLXRlbXBcIikpICsgJy10ZW1wLScgKyB0ZW1wO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciBpZFFhTGVhcm5pbmcgPSBpZCArICctdGVtcC0nICsgdGVtcDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBxYSA9ICc8ZGl2PjxkaXYgY2xhc3M9XCJ0aXRsZS1ib3ggZWRpdG9yLXFhLWlkXCIgdGl0bGU9XCInICsgJCgnI25vZGUtJyArIGlkKS5jaGlsZHJlbigpLmZpbmQoJy5lZGl0b3ItcWEtaWQnKS5hdHRyKCd0aXRsZScpICsgJ1wiPlFBIElEOicgKyAkKCcjbm9kZS0nICsgaWQpLmNoaWxkcmVuKCkuZmluZCgnLmVkaXRvci1xYS1pZCcpLmF0dHIoJ3RpdGxlJykgKyAnPC9kaXY+PGRpdiBjbGFzcz1cInRpdGxlLWJveCBlZGl0b3ItcWFcIiB0aXRsZT1cIicgKyBuYW1lU3VibWl0ICsgJ1wiPicgKyB0aXRsZSArICc8L2Rpdj48L2Rpdj4nO1xyXG4gICAgICAgIGVkaXRvci5hZGROb2RlKG5hbWVTdWJtaXQsIDEsIDAsIHBvc194LCBwb3NfeSwgJ2VkaXRvci1xYScsIHt9LCBxYSwgITEsIGlkUWFMZWFybmluZywgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpKTtcclxuICAgICAgICB2YXIgZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdub2RlLScgKyBpZFFhTGVhcm5pbmcpO1xyXG4gICAgICAgIHZhciBodG1sID0gJzxwIGNsYXNzPVwiJyArIGlkUWFMZWFybmluZyArICdcIiBvbmNsaWNrPVwiZWRpdG9yLmZvY3VzRGF0YSh0aGlzKVwiPicgKyB0aXRsZSArICc8L3A+JztcclxuICAgICAgICAkKCcuY29udGVudC1xYScpLmFwcGVuZChodG1sKTtcclxuICAgICAgICBlZGl0b3IuZm9jdXNEYXRhKGVsZW0sIGZhbHNlLCBpZFFhTGVhcm5pbmcpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjbGVhclZhbGlkYXRlKCkge1xyXG4gICAgJCgnZm9ybSNlbnRyeV9mb3JtX2VkaXQnKS5maW5kKCdzcGFuLmhlbHAtYmxvY2snKS5yZW1vdmUoKTtcclxuICAgICQoJ2Zvcm0jZW50cnlfZm9ybV9lZGl0JykuZmluZCgnZGl2Lmhhcy1lcnJvcicpLnJlbW92ZUNsYXNzKCdoYXMtZXJyb3InKTtcclxuICAgICQoJ2Zvcm0jZm9ybVNjZW5hcmlvJykuZmluZCgnc3Bhbi5oZWxwLWJsb2NrJykucmVtb3ZlKCk7XHJcbiAgICAkKCdmb3JtI2Zvcm1TY2VuYXJpbycpLmZpbmQoJ2Rpdi5oYXMtZXJyb3InKS5yZW1vdmVDbGFzcygnaGFzLWVycm9yJyk7XHJcbiAgICAkKCcuZXJyLWFkZC1zY2VuYXJpbycpLmZpbmQoJ3NwYW4uaGVscC1ibG9jaycpLnJlbW92ZSgpO1xyXG4gICAgJCgnLmVyci1hZGQtc2NlbmFyaW8nKS5maW5kKCdzcGFuLmhlbHAtYmxvY2sta2V5d29yZCcpLnJlbW92ZSgpO1xyXG4gICAgJCgnLmVyci1lZGl0LXNjZW5hcmlvJykuZmluZCgnc3Bhbi5oZWxwLWJsb2NrJykucmVtb3ZlKCk7XHJcbiAgICAkKCcuZXJyLWVkaXQtc2NlbmFyaW8nKS5maW5kKCdzcGFuLmhlbHAtYmxvY2sta2V5d29yZCcpLnJlbW92ZSgpO1xyXG4gICAgJCgnI2Nsb25lX2FyZWEnKS5maW5kKCcuaGFzLWVycm9yLWVtcHR5JykucmVtb3ZlQ2xhc3MoJ2hhcy1lcnJvci1lbXB0eScpO1xyXG4gICAgJCgnI2Nsb25lX2FyZWEnKS5maW5kKCcuaGFzLWVycm9yJykucmVtb3ZlQ2xhc3MoJ2hhcy1lcnJvcicpO1xyXG4gICAgJCgnI2Nsb25lX2FyZWFfZWRpdCcpLmZpbmQoJy5oYXMtZXJyb3ItZW1wdHknKS5yZW1vdmVDbGFzcygnaGFzLWVycm9yLWVtcHR5Jyk7XHJcbiAgICAkKCcjY2xvbmVfYXJlYV9lZGl0JykuZmluZCgnLmhhcy1lcnJvcicpLnJlbW92ZUNsYXNzKCdoYXMtZXJyb3InKTtcclxufVxyXG5cclxuZnVuY3Rpb24gdmFsaWRhdGVQYXJhbXMobmFtZSwgb3JkZXIsIGtleXdvcmRfc2VsZWN0LCB0eXBlKSB7XHJcbiAgICB2YXIgY2hlY2tfdmFsaWRhdGUgPSB0cnVlO1xyXG4gICAgY2xlYXJWYWxpZGF0ZSgpO1xyXG4gICAgLy8g44OK44Oq44KqIGlzIHJlcXVpcmVkXHJcbiAgICBpZiAobmFtZS50cmltKCkgPT09ICcnKSB7XHJcbiAgICAgICAgaWYgKHR5cGUgPT0gJ2VkaXQnKSB7XHJcbiAgICAgICAgICAgICQoJ2Zvcm0jZW50cnlfZm9ybV9lZGl0JykuZmluZCgnaW5wdXRbbmFtZT1cIm5hbWVcIl0nKS5wYXJlbnQoKS5hZGRDbGFzcygnaGFzLWVycm9yJykuYXBwZW5kKCc8c3BhbiBjbGFzcz1cImhlbHAtYmxvY2tcIj48c3Ryb25nPuOCt+ODiuODquOCquOBr+W/hemgiOOBp+OBmeOAgjwvc3Ryb25nPjwvc3Bhbj4nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGUgPT0gJ2NyZWF0ZScpIHtcclxuICAgICAgICAgICAgJCgnZm9ybSNmb3JtU2NlbmFyaW8nKS5maW5kKCdpbnB1dFtuYW1lPVwibmFtZVwiXScpLnBhcmVudCgpLmFkZENsYXNzKCdoYXMtZXJyb3InKS5hcHBlbmQoJzxzcGFuIGNsYXNzPVwiaGVscC1ibG9ja1wiPjxzdHJvbmc+44K344OK44Oq44Kq44Gv5b+F6aCI44Gn44GZ44CCPC9zdHJvbmc+PC9zcGFuPicpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjaGVja192YWxpZGF0ZSA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgLy8g6KGo56S66aCGIGlzIG51bWJlcmljXHJcbiAgICBpZiAob3JkZXIpIHtcclxuICAgICAgICBpZiAoISgvXlxcZCskLy50ZXN0KG9yZGVyKSkpIHtcclxuICAgICAgICAgICAgaWYgKHR5cGUgPT0gJ2VkaXQnKSB7XHJcbiAgICAgICAgICAgICAgICAkKCdmb3JtI2VudHJ5X2Zvcm1fZWRpdCcpLmZpbmQoJ2lucHV0W25hbWU9XCJvcmRlclwiXScpLnBhcmVudCgpLmFkZENsYXNzKCdoYXMtZXJyb3InKS5hcHBlbmQoJzxzcGFuIGNsYXNzPVwiaGVscC1ibG9ja1wiPjxzdHJvbmc+6KGo56S66aCG44Gr44GvMOS7peS4iuOBruaVsOWApOOCkuWFpeWKm+OBl+OBpuOBj+OBoOOBleOBhOOAgjwvc3Ryb25nPjwvc3Bhbj4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodHlwZSA9PSAnY3JlYXRlJykge1xyXG4gICAgICAgICAgICAgICAgJCgnI29yZGVyJykucGFyZW50KCkuYWRkQ2xhc3MoJ2hhcy1lcnJvcicpO1xyXG4gICAgICAgICAgICAgICAgJCgnI29yZGVyJykucGFyZW50KCkuYXBwZW5kKCc8c3BhbiBjbGFzcz1cImhlbHAtYmxvY2tcIj48c3Ryb25nPuihqOekuumghuOBq+OBrzDku6XkuIrjga7mlbDlgKTjgpLlhaXlipvjgZfjgabjgY/jgaDjgZXjgYTjgII8L3N0cm9uZz48L3NwYW4+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2hlY2tfdmFsaWRhdGUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmIChrZXl3b3JkX3NlbGVjdC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXl3b3JkX3NlbGVjdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoa2V5d29yZF9zZWxlY3RbaV0udmFsdWUudHJpbSgpID09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICAkKGtleXdvcmRfc2VsZWN0W2ldKS5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCdzcGFuLnNlbGVjdDItc2VsZWN0aW9uJykuYWRkQ2xhc3MoJ2hhcy1lcnJvci1lbXB0eScpO1xyXG4gICAgICAgICAgICAgICAgY2hlY2tfdmFsaWRhdGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKHR5cGUgPT0gJ2NyZWF0ZScpIHtcclxuICAgICAgICBpZiAoJCgnI2Nsb25lX2FyZWEnKS5maW5kKCcuaGFzLWVycm9yJykubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAkKCcuZXJyLWFkZC1zY2VuYXJpbycpLmFwcGVuZCgnPHNwYW4gY2xhc3M9XCJoZWxwLWJsb2NrLWtleXdvcmQgY29sLW1kLTEyXCI+PHN0cm9uZz7plqLpgKPjgq3jg7zjg6/jg7zjg4njgYzph43opIfjgZfjgabjgYTjgb7jgZnjgII8L3N0cm9uZz48L3NwYW4+JylcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCQoJyNjbG9uZV9hcmVhJykuZmluZCgnLmhhcy1lcnJvci1lbXB0eScpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgJCgnLmVyci1hZGQtc2NlbmFyaW8nKS5hcHBlbmQoJzxzcGFuIGNsYXNzPVwiaGVscC1ibG9jay1rZXl3b3JkIGNvbC1tZC0xMlwiPjxzdHJvbmc+6Zai6YCj44Kt44O844Ov44O844OJ44Gv5b+F6aCI44Gn44GZ44CCPC9zdHJvbmc+PC9zcGFuPicpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh0eXBlID09ICdlZGl0Jykge1xyXG4gICAgICAgIGlmICgkKCcjY2xvbmVfYXJlYV9lZGl0JykuZmluZCgnLmhhcy1lcnJvcicpLmxlbmd0aCA+IDAgJiYgdHlwZSA9PSAnZWRpdCcpIHtcclxuICAgICAgICAgICAgJCgnLmVyci1lZGl0LXNjZW5hcmlvJykuYXBwZW5kKCc8c3BhbiBjbGFzcz1cImhlbHAtYmxvY2sta2V5d29yZCBjb2wtbWQtMTJcIj48c3Ryb25nPumWoumAo+OCreODvOODr+ODvOODieOBjOmHjeikh+OBl+OBpuOBhOOBvuOBmeOAgjwvc3Ryb25nPjwvc3Bhbj4nKVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoJCgnI2Nsb25lX2FyZWFfZWRpdCcpLmZpbmQoJy5oYXMtZXJyb3ItZW1wdHknKS5sZW5ndGggPiAwICYmIHR5cGUgPT0gJ2VkaXQnKSB7XHJcbiAgICAgICAgICAgICQoJy5lcnItZWRpdC1zY2VuYXJpbycpLmFwcGVuZCgnPHNwYW4gY2xhc3M9XCJoZWxwLWJsb2NrLWtleXdvcmQgY29sLW1kLTEyXCI+PHN0cm9uZz7plqLpgKPjgq3jg7zjg6/jg7zjg4njga/lv4XpoIjjgafjgZnjgII8L3N0cm9uZz48L3NwYW4+JylcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmIChjaGVja192YWxpZGF0ZSkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBmdWxsU2NyZWVuRWxlbShmdWxsU2NyZWVuKSB7XHJcbiAgICB2YXIgZWxlbSA9ICQoJyNkcmF3Zmxvdy1lZGl0b3InKTtcclxuICAgIGlmIChlbGVtWzBdLnJlcXVlc3RGdWxsc2NyZWVuKSB7XHJcbiAgICAgICAgZWxlbVswXS5yZXF1ZXN0RnVsbHNjcmVlbigpO1xyXG4gICAgfSBlbHNlIGlmIChlbGVtWzBdLm1velJlcXVlc3RGdWxsU2NyZWVuKSB7IC8qIEZpcmVmb3ggKi9cclxuICAgICAgICBlbGVtWzBdLm1velJlcXVlc3RGdWxsU2NyZWVuKCk7XHJcbiAgICB9IGVsc2UgaWYgKGVsZW1bMF0ud2Via2l0UmVxdWVzdEZ1bGxzY3JlZW4pIHsgLyogQ2hyb21lLCBTYWZhcmkgYW5kIE9wZXJhICovXHJcbiAgICAgICAgZWxlbVswXS53ZWJraXRSZXF1ZXN0RnVsbHNjcmVlbigpO1xyXG4gICAgfSBlbHNlIGlmIChlbGVtWzBdLm1zUmVxdWVzdEZ1bGxzY3JlZW4pIHsgLyogSUUvRWRnZSAqL1xyXG4gICAgICAgIGVsZW1bMF0ubXNSZXF1ZXN0RnVsbHNjcmVlbigpO1xyXG4gICAgfVxyXG59XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdmdWxsc2NyZWVuY2hhbmdlJywgZXhpdEhhbmRsZXIpO1xyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd3ZWJraXRmdWxsc2NyZWVuY2hhbmdlJywgZXhpdEhhbmRsZXIpO1xyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3pmdWxsc2NyZWVuY2hhbmdlJywgZXhpdEhhbmRsZXIpO1xyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdNU0Z1bGxzY3JlZW5DaGFuZ2UnLCBleGl0SGFuZGxlcik7XHJcblxyXG5mdW5jdGlvbiBleGl0SGFuZGxlcigpIHtcclxuICAgIGlmICghZG9jdW1lbnQuZnVsbHNjcmVlbkVsZW1lbnQgJiYgIWRvY3VtZW50LndlYmtpdElzRnVsbFNjcmVlbiAmJiAhZG9jdW1lbnQubW96RnVsbFNjcmVlbiAmJiAhZG9jdW1lbnQubXNGdWxsc2NyZWVuRWxlbWVudCkge1xyXG4gICAgICAgIC8qc3R5bGUqL1xyXG4gICAgICAgICQoJy5iYXItem9vbS1jbG9zZScpLmZpbmQoJ2kuZmEtY29tcHJlc3MnKS5yZW1vdmVDbGFzcygnZmEtY29tcHJlc3MnKS5hZGRDbGFzcygnZmEtZXhwYW5kJylcclxuICAgICAgICAkKCcuYmFyLXpvb20tY2xvc2UnKS5yZW1vdmVDbGFzcygnYmFyLXpvb20tY2xvc2UnKS5hZGRDbGFzcygnYmFyLXpvb20tZmlsbCcpO1xyXG4gICAgICAgICQoJy5lZGl0b3ItYm9keScpLmNzcygnaGVpZ2h0JywgJ2NhbGMoMTAwdmggLSAyNTBweCknKTtcclxuICAgICAgICAkKCcuY29sLWxlZnQtYnRuJykuY3NzKCdtaW4td2lkdGgnLCAnMTk4cHgnKTtcclxuICAgICAgICBlZGl0b3IudXBkYXRlX2NvbnRhaW5lcl9zaXplKG51bGwsIHRydWUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAkKCcuYmFyLXpvb20tZmlsbCcpLmZpbmQoJ2kuZmEtZXhwYW5kJykucmVtb3ZlQ2xhc3MoJ2ZhLWV4cGFuZCcpLmFkZENsYXNzKCdmYS1jb21wcmVzcycpO1xyXG4gICAgICAgICQoJy5iYXItem9vbS1maWxsJykucmVtb3ZlQ2xhc3MoJ2Jhci16b29tLWZpbGwnKS5hZGRDbGFzcygnYmFyLXpvb20tY2xvc2UnKTtcclxuICAgICAgICAkKCcuZWRpdG9yLWJvZHknKS5jc3MoJ2hlaWdodCcsICdjYWxjKDEwMHZoIC0gMzJweCknKTtcclxuICAgICAgICAkKCcuY29sLWxlZnQtYnRuJykuY3NzKCd3aWR0aCcsICcyMDBweCcpO1xyXG4gICAgICAgIGVkaXRvci51cGRhdGVfY29udGFpbmVyX3NpemUobnVsbCwgdHJ1ZSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsb3NlRnVsbFNjcmVlbkVsZW0oZnVsbFNjcmVlbikge1xyXG4gICAgaWYgKGRvY3VtZW50LmV4aXRGdWxsc2NyZWVuKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4oKTtcclxuICAgIH0gZWxzZSBpZiAoZG9jdW1lbnQubW96Q2FuY2VsRnVsbFNjcmVlbikgeyAvKiBGaXJlZm94ICovXHJcbiAgICAgICAgZG9jdW1lbnQubW96Q2FuY2VsRnVsbFNjcmVlbigpO1xyXG4gICAgfSBlbHNlIGlmIChkb2N1bWVudC53ZWJraXRFeGl0RnVsbHNjcmVlbikgeyAvKiBDaHJvbWUsIFNhZmFyaSBhbmQgT3BlcmEgKi9cclxuICAgICAgICBkb2N1bWVudC53ZWJraXRFeGl0RnVsbHNjcmVlbigpO1xyXG4gICAgfSBlbHNlIGlmIChkb2N1bWVudC5tc0V4aXRGdWxsc2NyZWVuKSB7IC8qIElFL0VkZ2UgKi9cclxuICAgICAgICBkb2N1bWVudC5tc0V4aXRGdWxsc2NyZWVuKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbihmdW5jdGlvbigkKSB7XHJcblxyXG4gICAgJCggZG9jdW1lbnQgKS5yZWFkeShmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcuc2VsZWN0MicpLnNlbGVjdDIoe1xyXG4gICAgICAgICAgICBkcm9wZG93blBhcmVudDogJCgnI215U2VsZWN0MicpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKFwiLmFkZC1xYVwiKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBzZWFyY2hRYSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgXCIucWEtQWRkLU5vZGVcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgYWRkTm9kZUVsZW1lbnQoJ3FhJywgdGhpcyk7XHJcbiAgICAgICAgJCgnI3FhTW9kYWwnKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgXCIucWEtQ29weS1Ob2RlXCIsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGxldCBpZCA9IHRoaXMuZ2V0QXR0cmlidXRlKCdpZCcpO1xyXG4gICAgICAgIGNvcHlOb2RlRWxlbWVudChpZCk7XHJcbiAgICAgICAgJCgnI3FhTW9kYWwnKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEb3VibGUgY2xpY2sgY2xhc3MgZWRpdG9yLXNjZW5hcmlvXHJcbiAgICAgKi9cclxuICAgICQoZG9jdW1lbnQpLm9uKCdkYmxjbGljaycsIFwiLmVkaXRvci1zY2VuYXJpb1wiLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgc2NlbmFyaW9EZXRhaWwoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogRG91YmxlIGNsaWNrIGNsYXNzIGVkaXRvci1xYVxyXG4gICAgICovXHJcbiAgICAkKGRvY3VtZW50KS5vbignZGJsY2xpY2snLCBcIi5lZGl0b3ItcWFcIiwgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHFhRGV0YWlsKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKFwiLmVkaXQtc2NlbmFyaW9cIikub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgc2NlbmFyaW9FZGl0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKFwiLmNvcHktbm9kZVwiKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBjb3B5Tm9kZUVsZW1lbnQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoXCIuZGVsZXRlLW5vZGVcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgZGVsZXRlTm9kZUVsZW1lbnQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoXCIuc2F2ZS1zY2VuYXJpb1wiKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBzYXZlU2NlbmFyaW9FZGl0b3IoKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoXCIuZGVsZXRlLWFsbC1zY2VuYXJpb1wiKS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgZGVsZXRlQWxsTm9kZUVsZW1lbnQoZSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKFwiLnNlYXJjaC1zY2VuYXJpb1wiKS5vbigna2V5dXAnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBmaWxsdGVyRGF0YVNjZW5hcmlvKHRoaXMudmFsdWUpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJChcIi5zZWFyY2gtUUFcIikub24oJ2tleXVwJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgZmlsbHRlckRhdGFRYSh0aGlzLnZhbHVlKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoXCIucWEtc2VhY2hcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgc2VhcmNoUWEoKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoXCIuYWRkLW5vZGUtZWxlbWVudC1zY2VuYXJpb1wiKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBhZGROb2RlRWxlbWVudCgnc2NlbmFyaW8nKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuZWRpdC1zY2VuYXJpby1idXR0b24nLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBFZGl0Tm9kZUVsZW1lbnQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoXCIuZmlsbHRlckNhdGVnb3J5Q2hhbmdlXCIpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY2F0ZWdvcnknLCB0aGlzLnZhbHVlKTtcclxuICAgICAgICBsb2FkU2NlbmFyaW8odGhpcy52YWx1ZSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmJhci16b29tLWZpbGwnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBmdWxsU2NyZWVuRWxlbSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5iYXItem9vbS1jbG9zZScsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGNsb3NlRnVsbFNjcmVlbkVsZW0oKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImNhdGVnb3J5XCIpID09PSBudWxsKSB7XHJcbiAgICAgICAgbG9hZFNjZW5hcmlvKG51bGwpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAkKCcuZmlsbHRlckNhdGVnb3J5Q2hhbmdlJykudmFsKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY2F0ZWdvcnlcIikpLnRyaWdnZXIoJ2NoYW5nZScpO1xyXG4gICAgfVxyXG5cclxuICAgICQoJy5jbG9zZU1vZGFsUWEnKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICAgICAkKCcucWFLZXl3b3JkJykudmFsKCcnKTtcclxuICAgICAgICAkKCcucWFJZCcpLnZhbCgnJyk7XHJcbiAgICB9KTtcclxuICAgICQoJy5jbG9zZU1vZGFsQWRkU2MnKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICAgICAkKFwiLmtleXdvcmQtYWRkLXNjZW5hcmlvXCIpWzBdLmlubmVySFRNTCA9ICcnO1xyXG4gICAgICAgICQoXCIjbmFtZVNjZW5hcmlvXCIpLnZhbCgnJyk7XHJcbiAgICAgICAgJChcIiNvcmRlclwiKS52YWwoJycpO1xyXG4gICAgICAgICQoJyNzY2VuYXJpb0FkZCcpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICAgICAgY2xlYXJWYWxpZGF0ZSgpO1xyXG4gICAgfSk7XHJcbn0pKGpRdWVyeSk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9kcmF3Zmxvdy9kcmF3Zmxvdy1jdXN0b20uanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/js/drawflow/drawflow-custom.js\n");

/***/ }),

/***/ 7:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("./resources/assets/js/drawflow-custom.js");


/***/ })

/******/ });